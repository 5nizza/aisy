aag 373 38 21 1 314
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78 1
80 633
82 639
84 645
86 651
88 657
90 663
92 669
94 675
96 681
98 687
100 693
102 699
104 705
106 711
108 717
110 723
112 729
114 735
116 741
118 747
276
120 81 78
122 80 78
124 121 78
126 83 78
128 82 78
130 127 78
132 85 78
134 84 78
136 133 78
138 87 78
140 86 78
142 139 78
144 89 78
146 88 78
148 145 78
150 91 78
152 90 78
154 151 78
156 93 78
158 92 78
160 157 78
162 95 78
164 94 78
166 163 78
168 97 78
170 96 78
172 169 78
174 99 78
176 98 78
178 175 78
180 101 78
182 100 78
184 181 78
186 103 78
188 102 78
190 187 78
192 105 78
194 104 78
196 193 78
198 107 78
200 106 78
202 199 78
204 109 78
206 108 78
208 205 78
210 111 78
212 110 78
214 211 78
216 113 78
218 112 78
220 217 78
222 115 78
224 114 78
226 223 78
228 117 78
230 116 78
232 229 78
234 119 78
236 118 78
238 235 78
240 130 124
242 240 136
244 242 142
246 244 148
248 246 154
250 248 160
252 250 166
254 252 172
256 254 178
258 256 184
260 258 190
262 260 196
264 262 202
266 264 208
268 266 214
270 268 220
272 270 226
274 272 232
276 274 238
278 4 3
280 5 2
282 281 279
284 282 6
286 283 7
288 287 285
290 288 8
292 289 9
294 293 291
296 294 10
298 295 11
300 299 297
302 300 12
304 301 13
306 305 303
308 306 14
310 307 15
312 311 309
314 312 16
316 313 17
318 317 315
320 318 18
322 319 19
324 323 321
326 324 20
328 325 21
330 329 327
332 330 22
334 331 23
336 335 333
338 336 24
340 337 25
342 341 339
344 342 26
346 343 27
348 347 345
350 348 28
352 349 29
354 353 351
356 354 30
358 355 31
360 359 357
362 360 32
364 361 33
366 365 363
368 366 34
370 367 35
372 371 369
374 372 36
376 373 37
378 377 375
380 378 38
382 379 39
384 383 381
386 385 236
388 387 232
390 389 387
392 390 389
394 387 233
396 395 392
398 232 122
400 233 40
402 401 399
404 386 122
406 403 387
408 407 405
410 232 128
412 233 42
414 413 411
416 386 128
418 415 387
420 419 417
422 232 134
424 233 44
426 425 423
428 386 134
430 427 387
432 431 429
434 232 140
436 233 46
438 437 435
440 386 140
442 439 387
444 443 441
446 232 146
448 233 48
450 449 447
452 386 146
454 451 387
456 455 453
458 232 152
460 233 50
462 461 459
464 386 152
466 463 387
468 467 465
470 232 158
472 233 52
474 473 471
476 386 158
478 475 387
480 479 477
482 232 164
484 233 54
486 485 483
488 386 164
490 487 387
492 491 489
494 232 170
496 233 56
498 497 495
500 386 170
502 499 387
504 503 501
506 232 176
508 233 58
510 509 507
512 386 176
514 511 387
516 515 513
518 232 182
520 233 60
522 521 519
524 386 182
526 523 387
528 527 525
530 232 188
532 233 62
534 533 531
536 386 188
538 535 387
540 539 537
542 232 194
544 233 64
546 545 543
548 386 194
550 547 387
552 551 549
554 232 200
556 233 66
558 557 555
560 386 200
562 559 387
564 563 561
566 232 206
568 233 68
570 569 567
572 386 206
574 571 387
576 575 573
578 232 212
580 233 70
582 581 579
584 386 212
586 583 387
588 587 585
590 232 218
592 233 72
594 593 591
596 386 218
598 595 387
600 599 597
602 232 224
604 233 74
606 605 603
608 386 224
610 607 387
612 611 609
614 233 76
616 386 230
618 614 387
620 619 617
622 236 233
624 623 233
626 625 387
628 409 397
630 396 122
632 631 629
634 421 397
636 396 128
638 637 635
640 433 397
642 396 134
644 643 641
646 445 397
648 396 140
650 649 647
652 457 397
654 396 146
656 655 653
658 469 397
660 396 152
662 661 659
664 481 397
666 396 158
668 667 665
670 493 397
672 396 164
674 673 671
676 505 397
678 396 170
680 679 677
682 517 397
684 396 176
686 685 683
688 529 397
690 396 182
692 691 689
694 541 397
696 396 188
698 697 695
700 553 397
702 396 194
704 703 701
706 565 397
708 396 200
710 709 707
712 577 397
714 396 206
716 715 713
718 589 397
720 396 212
722 721 719
724 601 397
726 396 218
728 727 725
730 613 397
732 396 224
734 733 731
736 621 397
738 396 230
740 739 737
742 626 397
744 396 236
746 745 743
i0 controllable_c<0>
i1 controllable_c<1>
i2 controllable_c<2>
i3 controllable_c<3>
i4 controllable_c<4>
i5 controllable_c<5>
i6 controllable_c<6>
i7 controllable_c<7>
i8 controllable_c<8>
i9 controllable_c<9>
i10 controllable_c<10>
i11 controllable_c<11>
i12 controllable_c<12>
i13 controllable_c<13>
i14 controllable_c<14>
i15 controllable_c<15>
i16 controllable_c<16>
i17 controllable_c<17>
i18 controllable_c<18>
i19 a<0>
i20 a<1>
i21 a<2>
i22 a<3>
i23 a<4>
i24 a<5>
i25 a<6>
i26 a<7>
i27 a<8>
i28 a<9>
i29 a<10>
i30 a<11>
i31 a<12>
i32 a<13>
i33 a<14>
i34 a<15>
i35 a<16>
i36 a<17>
i37 a<18>
l0 n79
l1 counter<0>_out
l2 counter<1>_out
l3 counter<2>_out
l4 counter<3>_out
l5 counter<4>_out
l6 counter<5>_out
l7 counter<6>_out
l8 counter<7>_out
l9 counter<8>_out
l10 counter<9>_out
l11 counter<10>_out
l12 counter<11>_out
l13 counter<12>_out
l14 counter<13>_out
l15 counter<14>_out
l16 counter<15>_out
l17 counter<16>_out
l18 counter<17>_out
l19 counter<18>_out
l20 counter<19>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:41 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv mv20s.v   ---gives--> mv20s.mv
> abc -c "read_blif_mv mv20s.mv; write_aiger -s mv20s.aig"   ---gives--> mv20s.aig
> aigtoaig mv20s.aig mv20s.aag   ---gives--> mv20s.aag (this file)
Content of mv20s.v:
// realizable
module bench(clk, a, controllable_c, err);
  input clk;
  input [18:0] a;
  input [18:0] controllable_c;
  reg [19:0] counter;
  output err;
  wire ctrl_xor;
  
  assign err = (counter == 20'b11111111111111111111) ? 1 : 0;
  assign ctrl_xor = controllable_c[0] ^
                    controllable_c[1] ^
                    controllable_c[2] ^
                    controllable_c[3] ^
                    controllable_c[4] ^
                    controllable_c[5] ^
                    controllable_c[6] ^
                    controllable_c[7] ^
                    controllable_c[8] ^
                    controllable_c[9] ^
                    controllable_c[10] ^
                    controllable_c[11] ^
                    controllable_c[12] ^
                    controllable_c[13] ^
                    controllable_c[14] ^
                    controllable_c[15] ^
                    controllable_c[16] ^
                    controllable_c[17] ^
                    controllable_c[18];

  initial
  begin
    counter = 0;
  end

  always @ (posedge clk)
  begin
    if(counter[19] & ctrl_xor)
       counter[19] = 0;
    else if(counter[18])
      begin
       counter[19] = 1;
       counter[18] = 0;
      end
    else
       counter[18:0] = a;
   end
endmodule
-------------------------------
