aag 24 2 3 1 19
2
4
6 1
8 41
10 48
24
12 9 6
14 8 6
16 13 6
18 11 6
20 10 6
22 19 6
24 22 16
26 20 2
28 17 4
30 14 5
32 31 29
34 14 4
36 26 14
38 33 27
40 39 37
42 34 23
44 35 20
46 45 43
48 47 27
i0 controllable_c<0>
i1 a<0>
l0 n7
l1 counter<0>_out
l2 counter<1>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:34 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv mv2.v   ---gives--> mv2.mv
> abc -c "read_blif_mv mv2.mv; write_aiger -s mv2.aig"   ---gives--> mv2.aig
> aigtoaig mv2.aig mv2.aag   ---gives--> mv2.aag (this file)
Content of mv2.v:
// realizable
module bench(clk, a, controllable_c, err);
  input clk;
  input [0:0] a;
  input [0:0] controllable_c;
  reg [1:0] counter;
  output err;
  wire ctrl_xor;
  
  assign err = (counter == 2'b11) ? 1 : 0;
  assign ctrl_xor = controllable_c[0];

  initial
  begin
    counter = 0;
  end

  always @ (posedge clk)
  begin
    if(counter[1] & ctrl_xor)
       counter[1] = 0;
    else
       counter = counter + {1'b0, a};
   end
endmodule
-------------------------------
