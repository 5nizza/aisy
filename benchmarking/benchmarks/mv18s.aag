aag 335 34 19 1 282
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70 1
72 569
74 575
76 581
78 587
80 593
82 599
84 605
86 611
88 617
90 623
92 629
94 635
96 641
98 647
100 653
102 659
104 665
106 671
248
108 73 70
110 72 70
112 109 70
114 75 70
116 74 70
118 115 70
120 77 70
122 76 70
124 121 70
126 79 70
128 78 70
130 127 70
132 81 70
134 80 70
136 133 70
138 83 70
140 82 70
142 139 70
144 85 70
146 84 70
148 145 70
150 87 70
152 86 70
154 151 70
156 89 70
158 88 70
160 157 70
162 91 70
164 90 70
166 163 70
168 93 70
170 92 70
172 169 70
174 95 70
176 94 70
178 175 70
180 97 70
182 96 70
184 181 70
186 99 70
188 98 70
190 187 70
192 101 70
194 100 70
196 193 70
198 103 70
200 102 70
202 199 70
204 105 70
206 104 70
208 205 70
210 107 70
212 106 70
214 211 70
216 118 112
218 216 124
220 218 130
222 220 136
224 222 142
226 224 148
228 226 154
230 228 160
232 230 166
234 232 172
236 234 178
238 236 184
240 238 190
242 240 196
244 242 202
246 244 208
248 246 214
250 4 3
252 5 2
254 253 251
256 254 6
258 255 7
260 259 257
262 260 8
264 261 9
266 265 263
268 266 10
270 267 11
272 271 269
274 272 12
276 273 13
278 277 275
280 278 14
282 279 15
284 283 281
286 284 16
288 285 17
290 289 287
292 290 18
294 291 19
296 295 293
298 296 20
300 297 21
302 301 299
304 302 22
306 303 23
308 307 305
310 308 24
312 309 25
314 313 311
316 314 26
318 315 27
320 319 317
322 320 28
324 321 29
326 325 323
328 326 30
330 327 31
332 331 329
334 332 32
336 333 33
338 337 335
340 338 34
342 339 35
344 343 341
346 345 212
348 347 208
350 349 347
352 350 349
354 347 209
356 355 352
358 208 110
360 209 36
362 361 359
364 346 110
366 363 347
368 367 365
370 208 116
372 209 38
374 373 371
376 346 116
378 375 347
380 379 377
382 208 122
384 209 40
386 385 383
388 346 122
390 387 347
392 391 389
394 208 128
396 209 42
398 397 395
400 346 128
402 399 347
404 403 401
406 208 134
408 209 44
410 409 407
412 346 134
414 411 347
416 415 413
418 208 140
420 209 46
422 421 419
424 346 140
426 423 347
428 427 425
430 208 146
432 209 48
434 433 431
436 346 146
438 435 347
440 439 437
442 208 152
444 209 50
446 445 443
448 346 152
450 447 347
452 451 449
454 208 158
456 209 52
458 457 455
460 346 158
462 459 347
464 463 461
466 208 164
468 209 54
470 469 467
472 346 164
474 471 347
476 475 473
478 208 170
480 209 56
482 481 479
484 346 170
486 483 347
488 487 485
490 208 176
492 209 58
494 493 491
496 346 176
498 495 347
500 499 497
502 208 182
504 209 60
506 505 503
508 346 182
510 507 347
512 511 509
514 208 188
516 209 62
518 517 515
520 346 188
522 519 347
524 523 521
526 208 194
528 209 64
530 529 527
532 346 194
534 531 347
536 535 533
538 208 200
540 209 66
542 541 539
544 346 200
546 543 347
548 547 545
550 209 68
552 346 206
554 550 347
556 555 553
558 212 209
560 559 209
562 561 347
564 369 357
566 356 110
568 567 565
570 381 357
572 356 116
574 573 571
576 393 357
578 356 122
580 579 577
582 405 357
584 356 128
586 585 583
588 417 357
590 356 134
592 591 589
594 429 357
596 356 140
598 597 595
600 441 357
602 356 146
604 603 601
606 453 357
608 356 152
610 609 607
612 465 357
614 356 158
616 615 613
618 477 357
620 356 164
622 621 619
624 489 357
626 356 170
628 627 625
630 501 357
632 356 176
634 633 631
636 513 357
638 356 182
640 639 637
642 525 357
644 356 188
646 645 643
648 537 357
650 356 194
652 651 649
654 549 357
656 356 200
658 657 655
660 557 357
662 356 206
664 663 661
666 562 357
668 356 212
670 669 667
i0 controllable_c<0>
i1 controllable_c<1>
i2 controllable_c<2>
i3 controllable_c<3>
i4 controllable_c<4>
i5 controllable_c<5>
i6 controllable_c<6>
i7 controllable_c<7>
i8 controllable_c<8>
i9 controllable_c<9>
i10 controllable_c<10>
i11 controllable_c<11>
i12 controllable_c<12>
i13 controllable_c<13>
i14 controllable_c<14>
i15 controllable_c<15>
i16 controllable_c<16>
i17 a<0>
i18 a<1>
i19 a<2>
i20 a<3>
i21 a<4>
i22 a<5>
i23 a<6>
i24 a<7>
i25 a<8>
i26 a<9>
i27 a<10>
i28 a<11>
i29 a<12>
i30 a<13>
i31 a<14>
i32 a<15>
i33 a<16>
l0 n71
l1 counter<0>_out
l2 counter<1>_out
l3 counter<2>_out
l4 counter<3>_out
l5 counter<4>_out
l6 counter<5>_out
l7 counter<6>_out
l8 counter<7>_out
l9 counter<8>_out
l10 counter<9>_out
l11 counter<10>_out
l12 counter<11>_out
l13 counter<12>_out
l14 counter<13>_out
l15 counter<14>_out
l16 counter<15>_out
l17 counter<16>_out
l18 counter<17>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:36 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv mv18s.v   ---gives--> mv18s.mv
> abc -c "read_blif_mv mv18s.mv; write_aiger -s mv18s.aig"   ---gives--> mv18s.aig
> aigtoaig mv18s.aig mv18s.aag   ---gives--> mv18s.aag (this file)
Content of mv18s.v:
// realizable
module bench(clk, a, controllable_c, err);
  input clk;
  input [16:0] a;
  input [16:0] controllable_c;
  reg [17:0] counter;
  output err;
  wire ctrl_xor;
  
  assign err = (counter == 18'b111111111111111111) ? 1 : 0;
  assign ctrl_xor = controllable_c[0] ^
                    controllable_c[1] ^
                    controllable_c[2] ^
                    controllable_c[3] ^
                    controllable_c[4] ^
                    controllable_c[5] ^
                    controllable_c[6] ^
                    controllable_c[7] ^
                    controllable_c[8] ^
                    controllable_c[9] ^
                    controllable_c[10] ^
                    controllable_c[11] ^
                    controllable_c[12] ^
                    controllable_c[13] ^
                    controllable_c[14] ^
                    controllable_c[15] ^
                    controllable_c[16];

  initial
  begin
    counter = 0;
  end

  always @ (posedge clk)
  begin
    if(counter[17] & ctrl_xor)
       counter[17] = 0;
    else if(counter[16])
      begin
       counter[17] = 1;
       counter[16] = 0;
      end
    else
       counter[16:0] = a;
   end
endmodule
-------------------------------
