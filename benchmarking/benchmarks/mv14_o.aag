aag 222 26 15 1 181
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54 1
56 219
58 234
60 252
62 270
64 288
66 306
68 324
70 342
72 360
74 378
76 396
78 414
80 432
82 444
136
84 56 54
86 58 54
88 86 84
90 60 54
92 90 88
94 62 54
96 94 92
98 64 54
100 98 96
102 66 54
104 102 100
106 68 54
108 106 104
110 70 54
112 110 108
114 72 54
116 114 112
118 74 54
120 118 116
122 76 54
124 122 120
126 78 54
128 126 124
130 80 54
132 130 128
134 82 54
136 134 132
138 4 3
140 5 2
142 141 139
144 142 6
146 143 7
148 147 145
150 148 8
152 149 9
154 153 151
156 154 10
158 155 11
160 159 157
162 160 12
164 161 13
166 165 163
168 166 14
170 167 15
172 171 169
174 172 16
176 173 17
178 177 175
180 178 18
182 179 19
184 183 181
186 184 20
188 185 21
190 189 187
192 190 22
194 191 23
196 195 193
198 196 24
200 197 25
202 201 199
204 202 26
206 203 27
208 207 205
210 209 134
212 211 28
214 213 84
216 212 85
218 217 215
220 84 28
222 220 30
224 221 31
226 225 223
228 226 211
230 229 87
232 228 86
234 233 231
236 223 87
238 237 225
240 238 32
242 239 33
244 243 241
246 244 211
248 247 91
250 246 90
252 251 249
254 241 91
256 255 243
258 256 34
260 257 35
262 261 259
264 262 211
266 265 95
268 264 94
270 269 267
272 259 95
274 273 261
276 274 36
278 275 37
280 279 277
282 280 211
284 283 99
286 282 98
288 287 285
290 277 99
292 291 279
294 292 38
296 293 39
298 297 295
300 298 211
302 301 103
304 300 102
306 305 303
308 295 103
310 309 297
312 310 40
314 311 41
316 315 313
318 316 211
320 319 107
322 318 106
324 323 321
326 313 107
328 327 315
330 328 42
332 329 43
334 333 331
336 334 211
338 337 111
340 336 110
342 341 339
344 331 111
346 345 333
348 346 44
350 347 45
352 351 349
354 352 211
356 355 115
358 354 114
360 359 357
362 349 115
364 363 351
366 364 46
368 365 47
370 369 367
372 370 211
374 373 119
376 372 118
378 377 375
380 367 119
382 381 369
384 382 48
386 383 49
388 387 385
390 388 211
392 391 123
394 390 122
396 395 393
398 385 123
400 399 387
402 400 50
404 401 51
406 405 403
408 406 211
410 409 127
412 408 126
414 413 411
416 403 127
418 417 405
420 418 52
422 419 53
424 423 421
426 424 211
428 427 131
430 426 130
432 431 429
434 421 131
436 435 423
438 436 135
440 437 134
442 441 439
444 443 211
i0 controllable_c<0>
i1 controllable_c<1>
i2 controllable_c<2>
i3 controllable_c<3>
i4 controllable_c<4>
i5 controllable_c<5>
i6 controllable_c<6>
i7 controllable_c<7>
i8 controllable_c<8>
i9 controllable_c<9>
i10 controllable_c<10>
i11 controllable_c<11>
i12 controllable_c<12>
i13 a<0>
i14 a<1>
i15 a<2>
i16 a<3>
i17 a<4>
i18 a<5>
i19 a<6>
i20 a<7>
i21 a<8>
i22 a<9>
i23 a<10>
i24 a<11>
i25 a<12>
l0 n55
l1 counter<0>_out
l2 counter<1>_out
l3 counter<2>_out
l4 counter<3>_out
l5 counter<4>_out
l6 counter<5>_out
l7 counter<6>_out
l8 counter<7>_out
l9 counter<8>_out
l10 counter<9>_out
l11 counter<10>_out
l12 counter<11>_out
l13 counter<12>_out
l14 counter<13>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:36 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv mv14.v   ---gives--> mv14.mv
> abc -c "read_blif_mv mv14.mv; strash; refactor; rewrite; dfraig; rewrite; dfraig; write_aiger -s mv14_o.aig"   ---gives--> mv14_o.aig
> aigtoaig mv14_o.aig mv14_o.aag   ---gives--> mv14_o.aag (this file)
Content of mv14.v:
// realizable
module bench(clk, a, controllable_c, err);
  input clk;
  input [12:0] a;
  input [12:0] controllable_c;
  reg [13:0] counter;
  output err;
  wire ctrl_xor;
  
  assign err = (counter == 14'b11111111111111) ? 1 : 0;
  assign ctrl_xor = controllable_c[0] ^ 
                    controllable_c[1] ^
                    controllable_c[2] ^
                    controllable_c[3] ^
                    controllable_c[4] ^
                    controllable_c[5] ^
                    controllable_c[6] ^
                    controllable_c[7] ^
                    controllable_c[8] ^
                    controllable_c[9] ^
                    controllable_c[10] ^
                    controllable_c[11] ^
                    controllable_c[12];

  initial
  begin
    counter = 0;
  end

  always @ (posedge clk)
  begin
    if(counter[13] & ctrl_xor)
       counter[13] = 0;
    else
       counter = counter + {1'b0, a};
   end
endmodule
-------------------------------
