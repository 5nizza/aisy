aag 324 38 21 1 265
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78 1
80 315
82 330
84 348
86 366
88 384
90 402
92 420
94 438
96 456
98 474
100 492
102 510
104 528
106 546
108 564
110 582
112 600
114 618
116 636
118 648
196
120 80 78
122 82 78
124 122 120
126 84 78
128 126 124
130 86 78
132 130 128
134 88 78
136 134 132
138 90 78
140 138 136
142 92 78
144 142 140
146 94 78
148 146 144
150 96 78
152 150 148
154 98 78
156 154 152
158 100 78
160 158 156
162 102 78
164 162 160
166 104 78
168 166 164
170 106 78
172 170 168
174 108 78
176 174 172
178 110 78
180 178 176
182 112 78
184 182 180
186 114 78
188 186 184
190 116 78
192 190 188
194 118 78
196 194 192
198 4 3
200 5 2
202 201 199
204 202 6
206 203 7
208 207 205
210 208 8
212 209 9
214 213 211
216 214 10
218 215 11
220 219 217
222 220 12
224 221 13
226 225 223
228 226 14
230 227 15
232 231 229
234 232 16
236 233 17
238 237 235
240 238 18
242 239 19
244 243 241
246 244 20
248 245 21
250 249 247
252 250 22
254 251 23
256 255 253
258 256 24
260 257 25
262 261 259
264 262 26
266 263 27
268 267 265
270 268 28
272 269 29
274 273 271
276 274 30
278 275 31
280 279 277
282 280 32
284 281 33
286 285 283
288 286 34
290 287 35
292 291 289
294 292 36
296 293 37
298 297 295
300 298 38
302 299 39
304 303 301
306 305 194
308 307 40
310 309 120
312 308 121
314 313 311
316 120 40
318 316 42
320 317 43
322 321 319
324 322 307
326 325 123
328 324 122
330 329 327
332 319 123
334 333 321
336 334 44
338 335 45
340 339 337
342 340 307
344 343 127
346 342 126
348 347 345
350 337 127
352 351 339
354 352 46
356 353 47
358 357 355
360 358 307
362 361 131
364 360 130
366 365 363
368 355 131
370 369 357
372 370 48
374 371 49
376 375 373
378 376 307
380 379 135
382 378 134
384 383 381
386 373 135
388 387 375
390 388 50
392 389 51
394 393 391
396 394 307
398 397 139
400 396 138
402 401 399
404 391 139
406 405 393
408 406 52
410 407 53
412 411 409
414 412 307
416 415 143
418 414 142
420 419 417
422 409 143
424 423 411
426 424 54
428 425 55
430 429 427
432 430 307
434 433 147
436 432 146
438 437 435
440 427 147
442 441 429
444 442 56
446 443 57
448 447 445
450 448 307
452 451 151
454 450 150
456 455 453
458 445 151
460 459 447
462 460 58
464 461 59
466 465 463
468 466 307
470 469 155
472 468 154
474 473 471
476 463 155
478 477 465
480 478 60
482 479 61
484 483 481
486 484 307
488 487 159
490 486 158
492 491 489
494 481 159
496 495 483
498 496 62
500 497 63
502 501 499
504 502 307
506 505 163
508 504 162
510 509 507
512 499 163
514 513 501
516 514 64
518 515 65
520 519 517
522 520 307
524 523 167
526 522 166
528 527 525
530 517 167
532 531 519
534 532 66
536 533 67
538 537 535
540 538 307
542 541 171
544 540 170
546 545 543
548 535 171
550 549 537
552 550 68
554 551 69
556 555 553
558 556 307
560 559 175
562 558 174
564 563 561
566 553 175
568 567 555
570 568 70
572 569 71
574 573 571
576 574 307
578 577 179
580 576 178
582 581 579
584 571 179
586 585 573
588 586 72
590 587 73
592 591 589
594 592 307
596 595 183
598 594 182
600 599 597
602 589 183
604 603 591
606 604 74
608 605 75
610 609 607
612 610 307
614 613 187
616 612 186
618 617 615
620 607 187
622 621 609
624 622 76
626 623 77
628 627 625
630 628 307
632 631 191
634 630 190
636 635 633
638 625 191
640 639 627
642 640 195
644 641 194
646 645 643
648 647 307
i0 controllable_c<0>
i1 controllable_c<1>
i2 controllable_c<2>
i3 controllable_c<3>
i4 controllable_c<4>
i5 controllable_c<5>
i6 controllable_c<6>
i7 controllable_c<7>
i8 controllable_c<8>
i9 controllable_c<9>
i10 controllable_c<10>
i11 controllable_c<11>
i12 controllable_c<12>
i13 controllable_c<13>
i14 controllable_c<14>
i15 controllable_c<15>
i16 controllable_c<16>
i17 controllable_c<17>
i18 controllable_c<18>
i19 a<0>
i20 a<1>
i21 a<2>
i22 a<3>
i23 a<4>
i24 a<5>
i25 a<6>
i26 a<7>
i27 a<8>
i28 a<9>
i29 a<10>
i30 a<11>
i31 a<12>
i32 a<13>
i33 a<14>
i34 a<15>
i35 a<16>
i36 a<17>
i37 a<18>
l0 n79
l1 counter<0>_out
l2 counter<1>_out
l3 counter<2>_out
l4 counter<3>_out
l5 counter<4>_out
l6 counter<5>_out
l7 counter<6>_out
l8 counter<7>_out
l9 counter<8>_out
l10 counter<9>_out
l11 counter<10>_out
l12 counter<11>_out
l13 counter<12>_out
l14 counter<13>_out
l15 counter<14>_out
l16 counter<15>_out
l17 counter<16>_out
l18 counter<17>_out
l19 counter<18>_out
l20 counter<19>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:35 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv mv20.v   ---gives--> mv20.mv
> abc -c "read_blif_mv mv20.mv; strash; refactor; rewrite; dfraig; rewrite; dfraig; write_aiger -s mv20_o.aig"   ---gives--> mv20_o.aig
> aigtoaig mv20_o.aig mv20_o.aag   ---gives--> mv20_o.aag (this file)
Content of mv20.v:
// realizable
module bench(clk, a, controllable_c, err);
  input clk;
  input [18:0] a;
  input [18:0] controllable_c;
  reg [19:0] counter;
  output err;
  wire ctrl_xor;
  
  assign err = (counter == 20'b11111111111111111111) ? 1 : 0;
  assign ctrl_xor = controllable_c[0] ^ 
                    controllable_c[1] ^
                    controllable_c[2] ^
                    controllable_c[3] ^
                    controllable_c[4] ^
                    controllable_c[5] ^
                    controllable_c[6] ^
                    controllable_c[7] ^
                    controllable_c[8] ^
                    controllable_c[9] ^
                    controllable_c[10] ^
                    controllable_c[11] ^
                    controllable_c[12] ^
                    controllable_c[13] ^
                    controllable_c[14] ^
                    controllable_c[15] ^
                    controllable_c[16] ^
                    controllable_c[17] ^
                    controllable_c[18];

  initial
  begin
    counter = 0;
  end

  always @ (posedge clk)
  begin
    if(counter[19] & ctrl_xor)
       counter[19] = 0;
    else
       counter = counter + {1'b0, a};
   end
endmodule
-------------------------------
