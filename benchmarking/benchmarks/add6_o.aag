aag 93 18 2 1 73
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38 1
40 187
42
42 40 38
44 34 22
46 32 20
48 30 18
50 28 16
52 26 14
54 29 17
56 55 52
58 57 51
60 31 19
62 61 59
64 63 49
66 33 21
68 67 65
70 69 47
72 35 23
74 73 71
76 75 45
78 77 36
80 76 37
82 81 79
84 83 25
86 82 24
88 87 85
90 88 13
92 89 12
94 93 91
96 34 23
98 35 22
100 99 97
102 101 71
104 100 70
106 105 103
108 106 11
110 107 10
112 111 109
114 32 21
116 33 20
118 117 115
120 119 65
122 118 64
124 123 121
126 124 9
128 125 8
130 129 127
132 30 19
134 31 18
136 135 133
138 137 59
140 136 58
142 141 139
144 142 7
146 143 6
148 147 145
150 27 15
152 151 53
154 152 3
156 153 2
158 157 155
160 28 17
162 29 16
164 163 161
166 164 52
168 165 53
170 169 167
172 171 5
174 170 4
176 175 173
178 176 158
180 178 148
182 180 130
184 182 112
186 184 94
i0 controllable_c<0>
i1 controllable_c<1>
i2 controllable_c<2>
i3 controllable_c<3>
i4 controllable_c<4>
i5 controllable_c<5>
i6 a<0>
i7 a<1>
i8 a<2>
i9 a<3>
i10 a<4>
i11 a<5>
i12 b<0>
i13 b<1>
i14 b<2>
i15 b<3>
i16 b<4>
i17 b<5>
l0 n39
l1 err_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:36 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv add6.v   ---gives--> add6.mv
> abc -c "read_blif_mv add6.mv; strash; refactor; rewrite; dfraig; rewrite; dfraig; write_aiger -s add6_o.aig"   ---gives--> add6_o.aig
> aigtoaig add6_o.aig add6_o.aag   ---gives--> add6_o.aag (this file)
Content of add6.v:
// realizable
module bench(clk, a, b, controllable_c, err);
  input clk;
  input [5:0] a;
  input [5:0] b;
  input [5:0] controllable_c;
  output err;
  reg err;

  initial
  begin
    err = 1'b0;
  end

  always @ (posedge clk)
  begin
    if(controllable_c == a + b)
         err = 1'b0;
      else
         err = 1'b1;
   end
endmodule
-------------------------------
