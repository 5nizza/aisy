aag 79 2 12 1 65
2
4
6 1
8 77
10 85
12 93
14 101
16 109
18 117
20 125
22 133
24 141
26 149
28 158
70
30 28 6
32 26 6
34 24 6
36 22 6
38 20 6
40 18 6
42 16 6
44 14 6
46 12 6
48 8 6
50 10 6
52 50 48
54 52 46
56 54 44
58 56 42
60 58 40
62 60 38
64 62 36
66 64 34
68 66 32
70 68 30
72 48 2
74 49 3
76 75 73
78 48 3
80 79 50
82 78 51
84 83 81
86 52 3
88 87 46
90 86 47
92 91 89
94 54 3
96 95 44
98 94 45
100 99 97
102 56 3
104 103 42
106 102 43
108 107 105
110 58 3
112 111 40
114 110 41
116 115 113
118 60 3
120 119 38
122 118 39
124 123 121
126 62 3
128 127 36
130 126 37
132 131 129
134 64 3
136 135 34
138 134 35
140 139 137
142 66 3
144 143 32
146 142 33
148 147 145
150 31 5
152 68 3
154 152 151
156 153 31
158 157 155
i0 stay
i1 controllable_reset
l0 n7
l1 counter<0>_out
l2 counter<1>_out
l3 counter<2>_out
l4 counter<3>_out
l5 counter<4>_out
l6 counter<5>_out
l7 counter<6>_out
l8 counter<7>_out
l9 counter<8>_out
l10 counter<9>_out
l11 counter<10>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:42 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv cnt11m.v   ---gives--> cnt11m.mv
> abc -c "read_blif_mv cnt11m.mv; strash; refactor; rewrite; dfraig; rewrite; dfraig; write_aiger -s cnt11m_o.aig"   ---gives--> cnt11m_o.aig
> aigtoaig cnt11m_o.aig cnt11m_o.aag   ---gives--> cnt11m_o.aag (this file)
Content of cnt11m.v:
// realizable
module bench(clk, stay, controllable_reset, err);
  input clk;
  input stay;
  input controllable_reset;
  output err;
  reg [10:0] counter;

  assign err = (counter == 11'b11111111111) ? 1 : 0;
  
  initial
  begin
    counter = 11'b0;
  end
  always @ (posedge clk)
  begin
    if(stay)
      counter = counter;
    else if(counter == 11'b01111111111 && controllable_reset)
      counter = 0;
    else
      counter = counter + 1;
   end
endmodule
-------------------------------
