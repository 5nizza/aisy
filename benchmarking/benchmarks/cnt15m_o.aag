aag 107 2 16 1 89
2
4
6 1
8 101
10 109
12 117
14 125
16 133
18 141
20 149
22 157
24 165
26 173
28 181
30 189
32 197
34 205
36 214
94
38 36 6
40 34 6
42 32 6
44 30 6
46 28 6
48 26 6
50 24 6
52 22 6
54 20 6
56 18 6
58 16 6
60 14 6
62 12 6
64 8 6
66 10 6
68 66 64
70 68 62
72 70 60
74 72 58
76 74 56
78 76 54
80 78 52
82 80 50
84 82 48
86 84 46
88 86 44
90 88 42
92 90 40
94 92 38
96 64 2
98 65 3
100 99 97
102 64 3
104 103 66
106 102 67
108 107 105
110 68 3
112 111 62
114 110 63
116 115 113
118 70 3
120 119 60
122 118 61
124 123 121
126 72 3
128 127 58
130 126 59
132 131 129
134 74 3
136 135 56
138 134 57
140 139 137
142 76 3
144 143 54
146 142 55
148 147 145
150 78 3
152 151 52
154 150 53
156 155 153
158 80 3
160 159 50
162 158 51
164 163 161
166 82 3
168 167 48
170 166 49
172 171 169
174 84 3
176 175 46
178 174 47
180 179 177
182 86 3
184 183 44
186 182 45
188 187 185
190 88 3
192 191 42
194 190 43
196 195 193
198 90 3
200 199 40
202 198 41
204 203 201
206 39 5
208 92 3
210 208 207
212 209 39
214 213 211
i0 stay
i1 controllable_reset
l0 n7
l1 counter<0>_out
l2 counter<1>_out
l3 counter<2>_out
l4 counter<3>_out
l5 counter<4>_out
l6 counter<5>_out
l7 counter<6>_out
l8 counter<7>_out
l9 counter<8>_out
l10 counter<9>_out
l11 counter<10>_out
l12 counter<11>_out
l13 counter<12>_out
l14 counter<13>_out
l15 counter<14>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:40 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv cnt15m.v   ---gives--> cnt15m.mv
> abc -c "read_blif_mv cnt15m.mv; strash; refactor; rewrite; dfraig; rewrite; dfraig; write_aiger -s cnt15m_o.aig"   ---gives--> cnt15m_o.aig
> aigtoaig cnt15m_o.aig cnt15m_o.aag   ---gives--> cnt15m_o.aag (this file)
Content of cnt15m.v:
// realizable
module bench(clk, stay, controllable_reset, err);
  input clk;
  input stay;
  input controllable_reset;
  output err;
  reg [14:0] counter;

  assign err = (counter == 15'b111111111111111) ? 1 : 0;
  
  initial
  begin
    counter = 15'b0;
  end
  always @ (posedge clk)
  begin
    if(stay)
      counter = counter;
    else if(counter == 15'b011111111111111 && controllable_reset)
      counter = 0;
    else
      counter = counter + 1;
   end
endmodule
-------------------------------
