aag 115 2 8 1 105
2
4
6 1
8 195
10 201
12 207
14 213
16 219
18 225
20 231
74
22 9 6
24 8 6
26 23 6
28 11 6
30 10 6
32 29 6
34 13 6
36 12 6
38 35 6
40 15 6
42 14 6
44 41 6
46 17 6
48 16 6
50 47 6
52 19 6
54 18 6
56 53 6
58 21 6
60 20 6
62 59 6
64 32 26
66 64 38
68 66 44
70 68 50
72 70 56
74 72 62
76 72 61
78 76 4
80 78 3
82 81 3
84 79 3
86 85 82
88 79 27
90 24 2
92 88 3
94 93 91
96 33 24
98 30 25
100 99 97
102 101 79
104 30 2
106 102 3
108 107 105
110 30 24
112 110 39
114 111 36
116 115 113
118 117 79
120 36 2
122 118 3
124 123 121
126 110 36
128 126 45
130 127 42
132 131 129
134 133 79
136 42 2
138 134 3
140 139 137
142 126 42
144 142 51
146 143 48
148 147 145
150 149 79
152 48 2
154 150 3
156 155 153
158 142 48
160 158 57
162 159 54
164 163 161
166 165 79
168 54 2
170 166 3
172 171 169
174 158 54
176 174 63
178 175 60
180 179 177
182 181 79
184 60 2
186 182 3
188 187 185
190 95 87
192 86 24
194 193 191
196 109 87
198 86 30
200 199 197
202 125 87
204 86 36
206 205 203
208 141 87
210 86 42
212 211 209
214 157 87
216 86 48
218 217 215
220 173 87
222 86 54
224 223 221
226 189 87
228 86 60
230 229 227
i0 stay
i1 controllable_reset
l0 n7
l1 counter<0>_out
l2 counter<1>_out
l3 counter<2>_out
l4 counter<3>_out
l5 counter<4>_out
l6 counter<5>_out
l7 counter<6>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:37 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv cnt7m.v   ---gives--> cnt7m.mv
> abc -c "read_blif_mv cnt7m.mv; write_aiger -s cnt7m.aig"   ---gives--> cnt7m.aig
> aigtoaig cnt7m.aig cnt7m.aag   ---gives--> cnt7m.aag (this file)
Content of cnt7m.v:
// realizable
module bench(clk, stay, controllable_reset, err);
  input clk;
  input stay;
  input controllable_reset;
  output err;
  reg [6:0] counter;

  assign err = (counter == 7'b1111111) ? 1 : 0;
  
  initial
  begin
    counter = 7'b0;
  end
  always @ (posedge clk)
  begin
    if(stay)
      counter = counter;
    else if(counter == 7'b0111111 && controllable_reset)
      counter = 0;
    else
      counter = counter + 1;
   end
endmodule
-------------------------------
