aag 44 2 7 1 35
2
4
6 1
8 47
10 55
12 63
14 71
16 79
18 88
40
20 18 6
22 16 6
24 14 6
26 12 6
28 8 6
30 10 6
32 30 28
34 32 26
36 34 24
38 36 22
40 38 20
42 28 2
44 29 3
46 45 43
48 28 3
50 49 30
52 48 31
54 53 51
56 32 3
58 57 26
60 56 27
62 61 59
64 34 3
66 65 24
68 64 25
70 69 67
72 36 3
74 73 22
76 72 23
78 77 75
80 21 5
82 38 3
84 82 81
86 83 21
88 87 85
i0 stay
i1 controllable_reset
l0 n7
l1 counter<0>_out
l2 counter<1>_out
l3 counter<2>_out
l4 counter<3>_out
l5 counter<4>_out
l6 counter<5>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:40 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv cnt6m.v   ---gives--> cnt6m.mv
> abc -c "read_blif_mv cnt6m.mv; strash; refactor; rewrite; dfraig; rewrite; dfraig; write_aiger -s cnt6m_o.aig"   ---gives--> cnt6m_o.aig
> aigtoaig cnt6m_o.aig cnt6m_o.aag   ---gives--> cnt6m_o.aag (this file)
Content of cnt6m.v:
// realizable
module bench(clk, stay, controllable_reset, err);
  input clk;
  input stay;
  input controllable_reset;
  output err;
  reg [5:0] counter;

  assign err = (counter == 6'b111111) ? 1 : 0;
  
  initial
  begin
    counter = 6'b0;
  end
  always @ (posedge clk)
  begin
    if(stay)
      counter = counter;
    else if(counter == 6'b011111 && controllable_reset)
      counter = 0;
    else
      counter = counter + 1;
   end
endmodule
-------------------------------
