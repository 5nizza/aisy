aag 411 42 23 1 346
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86 1
88 697
90 703
92 709
94 715
96 721
98 727
100 733
102 739
104 745
106 751
108 757
110 763
112 769
114 775
116 781
118 787
120 793
122 799
124 805
126 811
128 817
130 823
304
132 89 86
134 88 86
136 133 86
138 91 86
140 90 86
142 139 86
144 93 86
146 92 86
148 145 86
150 95 86
152 94 86
154 151 86
156 97 86
158 96 86
160 157 86
162 99 86
164 98 86
166 163 86
168 101 86
170 100 86
172 169 86
174 103 86
176 102 86
178 175 86
180 105 86
182 104 86
184 181 86
186 107 86
188 106 86
190 187 86
192 109 86
194 108 86
196 193 86
198 111 86
200 110 86
202 199 86
204 113 86
206 112 86
208 205 86
210 115 86
212 114 86
214 211 86
216 117 86
218 116 86
220 217 86
222 119 86
224 118 86
226 223 86
228 121 86
230 120 86
232 229 86
234 123 86
236 122 86
238 235 86
240 125 86
242 124 86
244 241 86
246 127 86
248 126 86
250 247 86
252 129 86
254 128 86
256 253 86
258 131 86
260 130 86
262 259 86
264 142 136
266 264 148
268 266 154
270 268 160
272 270 166
274 272 172
276 274 178
278 276 184
280 278 190
282 280 196
284 282 202
286 284 208
288 286 214
290 288 220
292 290 226
294 292 232
296 294 238
298 296 244
300 298 250
302 300 256
304 302 262
306 4 3
308 5 2
310 309 307
312 310 6
314 311 7
316 315 313
318 316 8
320 317 9
322 321 319
324 322 10
326 323 11
328 327 325
330 328 12
332 329 13
334 333 331
336 334 14
338 335 15
340 339 337
342 340 16
344 341 17
346 345 343
348 346 18
350 347 19
352 351 349
354 352 20
356 353 21
358 357 355
360 358 22
362 359 23
364 363 361
366 364 24
368 365 25
370 369 367
372 370 26
374 371 27
376 375 373
378 376 28
380 377 29
382 381 379
384 382 30
386 383 31
388 387 385
390 388 32
392 389 33
394 393 391
396 394 34
398 395 35
400 399 397
402 400 36
404 401 37
406 405 403
408 406 38
410 407 39
412 411 409
414 412 40
416 413 41
418 417 415
420 418 42
422 419 43
424 423 421
426 425 260
428 427 256
430 429 427
432 430 429
434 427 257
436 435 432
438 256 134
440 257 44
442 441 439
444 426 134
446 443 427
448 447 445
450 256 140
452 257 46
454 453 451
456 426 140
458 455 427
460 459 457
462 256 146
464 257 48
466 465 463
468 426 146
470 467 427
472 471 469
474 256 152
476 257 50
478 477 475
480 426 152
482 479 427
484 483 481
486 256 158
488 257 52
490 489 487
492 426 158
494 491 427
496 495 493
498 256 164
500 257 54
502 501 499
504 426 164
506 503 427
508 507 505
510 256 170
512 257 56
514 513 511
516 426 170
518 515 427
520 519 517
522 256 176
524 257 58
526 525 523
528 426 176
530 527 427
532 531 529
534 256 182
536 257 60
538 537 535
540 426 182
542 539 427
544 543 541
546 256 188
548 257 62
550 549 547
552 426 188
554 551 427
556 555 553
558 256 194
560 257 64
562 561 559
564 426 194
566 563 427
568 567 565
570 256 200
572 257 66
574 573 571
576 426 200
578 575 427
580 579 577
582 256 206
584 257 68
586 585 583
588 426 206
590 587 427
592 591 589
594 256 212
596 257 70
598 597 595
600 426 212
602 599 427
604 603 601
606 256 218
608 257 72
610 609 607
612 426 218
614 611 427
616 615 613
618 256 224
620 257 74
622 621 619
624 426 224
626 623 427
628 627 625
630 256 230
632 257 76
634 633 631
636 426 230
638 635 427
640 639 637
642 256 236
644 257 78
646 645 643
648 426 236
650 647 427
652 651 649
654 256 242
656 257 80
658 657 655
660 426 242
662 659 427
664 663 661
666 256 248
668 257 82
670 669 667
672 426 248
674 671 427
676 675 673
678 257 84
680 426 254
682 678 427
684 683 681
686 260 257
688 687 257
690 689 427
692 449 437
694 436 134
696 695 693
698 461 437
700 436 140
702 701 699
704 473 437
706 436 146
708 707 705
710 485 437
712 436 152
714 713 711
716 497 437
718 436 158
720 719 717
722 509 437
724 436 164
726 725 723
728 521 437
730 436 170
732 731 729
734 533 437
736 436 176
738 737 735
740 545 437
742 436 182
744 743 741
746 557 437
748 436 188
750 749 747
752 569 437
754 436 194
756 755 753
758 581 437
760 436 200
762 761 759
764 593 437
766 436 206
768 767 765
770 605 437
772 436 212
774 773 771
776 617 437
778 436 218
780 779 777
782 629 437
784 436 224
786 785 783
788 641 437
790 436 230
792 791 789
794 653 437
796 436 236
798 797 795
800 665 437
802 436 242
804 803 801
806 677 437
808 436 248
810 809 807
812 685 437
814 436 254
816 815 813
818 690 437
820 436 260
822 821 819
i0 controllable_c<0>
i1 controllable_c<1>
i2 controllable_c<2>
i3 controllable_c<3>
i4 controllable_c<4>
i5 controllable_c<5>
i6 controllable_c<6>
i7 controllable_c<7>
i8 controllable_c<8>
i9 controllable_c<9>
i10 controllable_c<10>
i11 controllable_c<11>
i12 controllable_c<12>
i13 controllable_c<13>
i14 controllable_c<14>
i15 controllable_c<15>
i16 controllable_c<16>
i17 controllable_c<17>
i18 controllable_c<18>
i19 controllable_c<19>
i20 controllable_c<20>
i21 a<0>
i22 a<1>
i23 a<2>
i24 a<3>
i25 a<4>
i26 a<5>
i27 a<6>
i28 a<7>
i29 a<8>
i30 a<9>
i31 a<10>
i32 a<11>
i33 a<12>
i34 a<13>
i35 a<14>
i36 a<15>
i37 a<16>
i38 a<17>
i39 a<18>
i40 a<19>
i41 a<20>
l0 n87
l1 counter<0>_out
l2 counter<1>_out
l3 counter<2>_out
l4 counter<3>_out
l5 counter<4>_out
l6 counter<5>_out
l7 counter<6>_out
l8 counter<7>_out
l9 counter<8>_out
l10 counter<9>_out
l11 counter<10>_out
l12 counter<11>_out
l13 counter<12>_out
l14 counter<13>_out
l15 counter<14>_out
l16 counter<15>_out
l17 counter<16>_out
l18 counter<17>_out
l19 counter<18>_out
l20 counter<19>_out
l21 counter<20>_out
l22 counter<21>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:44 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv mv22s.v   ---gives--> mv22s.mv
> abc -c "read_blif_mv mv22s.mv; write_aiger -s mv22s.aig"   ---gives--> mv22s.aig
> aigtoaig mv22s.aig mv22s.aag   ---gives--> mv22s.aag (this file)
Content of mv22s.v:
// realizable
module bench(clk, a, controllable_c, err);
  input clk;
  input [20:0] a;
  input [20:0] controllable_c;
  reg [21:0] counter;
  output err;
  wire ctrl_xor;
  
  assign err = (counter == 22'b1111111111111111111111) ? 1 : 0;
  assign ctrl_xor = controllable_c[0] ^
                    controllable_c[1] ^
                    controllable_c[2] ^
                    controllable_c[3] ^
                    controllable_c[4] ^
                    controllable_c[5] ^
                    controllable_c[6] ^
                    controllable_c[7] ^
                    controllable_c[8] ^
                    controllable_c[9] ^
                    controllable_c[10] ^
                    controllable_c[11] ^
                    controllable_c[12] ^
                    controllable_c[13] ^
                    controllable_c[14] ^
                    controllable_c[15] ^
                    controllable_c[16] ^
                    controllable_c[17] ^
                    controllable_c[18] ^
                    controllable_c[19] ^
                    controllable_c[20];

  initial
  begin
    counter = 0;
  end

  always @ (posedge clk)
  begin
    if(counter[21] & ctrl_xor)
       counter[21] = 0;
    else if(counter[20])
      begin
       counter[21] = 1;
       counter[20] = 0;
      end
    else
       counter[20:0] = a;
   end
endmodule
-------------------------------
