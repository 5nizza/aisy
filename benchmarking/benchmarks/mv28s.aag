aag 525 54 29 1 442
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
102
104
106
108
110 1
112 889
114 895
116 901
118 907
120 913
122 919
124 925
126 931
128 937
130 943
132 949
134 955
136 961
138 967
140 973
142 979
144 985
146 991
148 997
150 1003
152 1009
154 1015
156 1021
158 1027
160 1033
162 1039
164 1045
166 1051
388
168 113 110
170 112 110
172 169 110
174 115 110
176 114 110
178 175 110
180 117 110
182 116 110
184 181 110
186 119 110
188 118 110
190 187 110
192 121 110
194 120 110
196 193 110
198 123 110
200 122 110
202 199 110
204 125 110
206 124 110
208 205 110
210 127 110
212 126 110
214 211 110
216 129 110
218 128 110
220 217 110
222 131 110
224 130 110
226 223 110
228 133 110
230 132 110
232 229 110
234 135 110
236 134 110
238 235 110
240 137 110
242 136 110
244 241 110
246 139 110
248 138 110
250 247 110
252 141 110
254 140 110
256 253 110
258 143 110
260 142 110
262 259 110
264 145 110
266 144 110
268 265 110
270 147 110
272 146 110
274 271 110
276 149 110
278 148 110
280 277 110
282 151 110
284 150 110
286 283 110
288 153 110
290 152 110
292 289 110
294 155 110
296 154 110
298 295 110
300 157 110
302 156 110
304 301 110
306 159 110
308 158 110
310 307 110
312 161 110
314 160 110
316 313 110
318 163 110
320 162 110
322 319 110
324 165 110
326 164 110
328 325 110
330 167 110
332 166 110
334 331 110
336 178 172
338 336 184
340 338 190
342 340 196
344 342 202
346 344 208
348 346 214
350 348 220
352 350 226
354 352 232
356 354 238
358 356 244
360 358 250
362 360 256
364 362 262
366 364 268
368 366 274
370 368 280
372 370 286
374 372 292
376 374 298
378 376 304
380 378 310
382 380 316
384 382 322
386 384 328
388 386 334
390 4 3
392 5 2
394 393 391
396 394 6
398 395 7
400 399 397
402 400 8
404 401 9
406 405 403
408 406 10
410 407 11
412 411 409
414 412 12
416 413 13
418 417 415
420 418 14
422 419 15
424 423 421
426 424 16
428 425 17
430 429 427
432 430 18
434 431 19
436 435 433
438 436 20
440 437 21
442 441 439
444 442 22
446 443 23
448 447 445
450 448 24
452 449 25
454 453 451
456 454 26
458 455 27
460 459 457
462 460 28
464 461 29
466 465 463
468 466 30
470 467 31
472 471 469
474 472 32
476 473 33
478 477 475
480 478 34
482 479 35
484 483 481
486 484 36
488 485 37
490 489 487
492 490 38
494 491 39
496 495 493
498 496 40
500 497 41
502 501 499
504 502 42
506 503 43
508 507 505
510 508 44
512 509 45
514 513 511
516 514 46
518 515 47
520 519 517
522 520 48
524 521 49
526 525 523
528 526 50
530 527 51
532 531 529
534 532 52
536 533 53
538 537 535
540 538 54
542 539 55
544 543 541
546 545 332
548 547 328
550 549 547
552 550 549
554 547 329
556 555 552
558 328 170
560 329 56
562 561 559
564 546 170
566 563 547
568 567 565
570 328 176
572 329 58
574 573 571
576 546 176
578 575 547
580 579 577
582 328 182
584 329 60
586 585 583
588 546 182
590 587 547
592 591 589
594 328 188
596 329 62
598 597 595
600 546 188
602 599 547
604 603 601
606 328 194
608 329 64
610 609 607
612 546 194
614 611 547
616 615 613
618 328 200
620 329 66
622 621 619
624 546 200
626 623 547
628 627 625
630 328 206
632 329 68
634 633 631
636 546 206
638 635 547
640 639 637
642 328 212
644 329 70
646 645 643
648 546 212
650 647 547
652 651 649
654 328 218
656 329 72
658 657 655
660 546 218
662 659 547
664 663 661
666 328 224
668 329 74
670 669 667
672 546 224
674 671 547
676 675 673
678 328 230
680 329 76
682 681 679
684 546 230
686 683 547
688 687 685
690 328 236
692 329 78
694 693 691
696 546 236
698 695 547
700 699 697
702 328 242
704 329 80
706 705 703
708 546 242
710 707 547
712 711 709
714 328 248
716 329 82
718 717 715
720 546 248
722 719 547
724 723 721
726 328 254
728 329 84
730 729 727
732 546 254
734 731 547
736 735 733
738 328 260
740 329 86
742 741 739
744 546 260
746 743 547
748 747 745
750 328 266
752 329 88
754 753 751
756 546 266
758 755 547
760 759 757
762 328 272
764 329 90
766 765 763
768 546 272
770 767 547
772 771 769
774 328 278
776 329 92
778 777 775
780 546 278
782 779 547
784 783 781
786 328 284
788 329 94
790 789 787
792 546 284
794 791 547
796 795 793
798 328 290
800 329 96
802 801 799
804 546 290
806 803 547
808 807 805
810 328 296
812 329 98
814 813 811
816 546 296
818 815 547
820 819 817
822 328 302
824 329 100
826 825 823
828 546 302
830 827 547
832 831 829
834 328 308
836 329 102
838 837 835
840 546 308
842 839 547
844 843 841
846 328 314
848 329 104
850 849 847
852 546 314
854 851 547
856 855 853
858 328 320
860 329 106
862 861 859
864 546 320
866 863 547
868 867 865
870 329 108
872 546 326
874 870 547
876 875 873
878 332 329
880 879 329
882 881 547
884 569 557
886 556 170
888 887 885
890 581 557
892 556 176
894 893 891
896 593 557
898 556 182
900 899 897
902 605 557
904 556 188
906 905 903
908 617 557
910 556 194
912 911 909
914 629 557
916 556 200
918 917 915
920 641 557
922 556 206
924 923 921
926 653 557
928 556 212
930 929 927
932 665 557
934 556 218
936 935 933
938 677 557
940 556 224
942 941 939
944 689 557
946 556 230
948 947 945
950 701 557
952 556 236
954 953 951
956 713 557
958 556 242
960 959 957
962 725 557
964 556 248
966 965 963
968 737 557
970 556 254
972 971 969
974 749 557
976 556 260
978 977 975
980 761 557
982 556 266
984 983 981
986 773 557
988 556 272
990 989 987
992 785 557
994 556 278
996 995 993
998 797 557
1000 556 284
1002 1001 999
1004 809 557
1006 556 290
1008 1007 1005
1010 821 557
1012 556 296
1014 1013 1011
1016 833 557
1018 556 302
1020 1019 1017
1022 845 557
1024 556 308
1026 1025 1023
1028 857 557
1030 556 314
1032 1031 1029
1034 869 557
1036 556 320
1038 1037 1035
1040 877 557
1042 556 326
1044 1043 1041
1046 882 557
1048 556 332
1050 1049 1047
i0 controllable_c<0>
i1 controllable_c<1>
i2 controllable_c<2>
i3 controllable_c<3>
i4 controllable_c<4>
i5 controllable_c<5>
i6 controllable_c<6>
i7 controllable_c<7>
i8 controllable_c<8>
i9 controllable_c<9>
i10 controllable_c<10>
i11 controllable_c<11>
i12 controllable_c<12>
i13 controllable_c<13>
i14 controllable_c<14>
i15 controllable_c<15>
i16 controllable_c<16>
i17 controllable_c<17>
i18 controllable_c<18>
i19 controllable_c<19>
i20 controllable_c<20>
i21 controllable_c<21>
i22 controllable_c<22>
i23 controllable_c<23>
i24 controllable_c<24>
i25 controllable_c<25>
i26 controllable_c<26>
i27 a<0>
i28 a<1>
i29 a<2>
i30 a<3>
i31 a<4>
i32 a<5>
i33 a<6>
i34 a<7>
i35 a<8>
i36 a<9>
i37 a<10>
i38 a<11>
i39 a<12>
i40 a<13>
i41 a<14>
i42 a<15>
i43 a<16>
i44 a<17>
i45 a<18>
i46 a<19>
i47 a<20>
i48 a<21>
i49 a<22>
i50 a<23>
i51 a<24>
i52 a<25>
i53 a<26>
l0 n111
l1 counter<0>_out
l2 counter<1>_out
l3 counter<2>_out
l4 counter<3>_out
l5 counter<4>_out
l6 counter<5>_out
l7 counter<6>_out
l8 counter<7>_out
l9 counter<8>_out
l10 counter<9>_out
l11 counter<10>_out
l12 counter<11>_out
l13 counter<12>_out
l14 counter<13>_out
l15 counter<14>_out
l16 counter<15>_out
l17 counter<16>_out
l18 counter<17>_out
l19 counter<18>_out
l20 counter<19>_out
l21 counter<20>_out
l22 counter<21>_out
l23 counter<22>_out
l24 counter<23>_out
l25 counter<24>_out
l26 counter<25>_out
l27 counter<26>_out
l28 counter<27>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:43 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv mv28s.v   ---gives--> mv28s.mv
> abc -c "read_blif_mv mv28s.mv; write_aiger -s mv28s.aig"   ---gives--> mv28s.aig
> aigtoaig mv28s.aig mv28s.aag   ---gives--> mv28s.aag (this file)
Content of mv28s.v:
// realizable
module bench(clk, a, controllable_c, err);
  input clk;
  input [26:0] a;
  input [26:0] controllable_c;
  reg [27:0] counter;
  output err;
  wire ctrl_xor;
  
  assign err = (counter == 28'b1111111111111111111111111111) ? 1 : 0;
  assign ctrl_xor = controllable_c[0] ^
                    controllable_c[1] ^
                    controllable_c[2] ^
                    controllable_c[3] ^
                    controllable_c[4] ^
                    controllable_c[5] ^
                    controllable_c[6] ^
                    controllable_c[7] ^
                    controllable_c[8] ^
                    controllable_c[9] ^
                    controllable_c[10] ^
                    controllable_c[11] ^
                    controllable_c[12] ^
                    controllable_c[13] ^
                    controllable_c[14] ^
                    controllable_c[15] ^
                    controllable_c[16] ^
                    controllable_c[17] ^
                    controllable_c[18] ^
                    controllable_c[19] ^
                    controllable_c[20] ^
                    controllable_c[21] ^
                    controllable_c[22] ^
                    controllable_c[23] ^
                    controllable_c[24] ^
                    controllable_c[25] ^
                    controllable_c[26];
                    

  initial
  begin
    counter = 0;
  end

  always @ (posedge clk)
  begin
    if(counter[27] & ctrl_xor)
       counter[27] = 0;
    else if(counter[26])
      begin
       counter[27] = 1;
       counter[26] = 0;
      end
    else
       counter[26:0] = a;
   end
endmodule
-------------------------------
