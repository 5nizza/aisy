aag 51 2 4 1 45
2
4
6 1
8 91
10 97
12 103
34
14 9 6
16 8 6
18 15 6
20 11 6
22 10 6
24 21 6
26 13 6
28 12 6
30 27 6
32 24 18
34 32 30
36 32 29
38 36 4
40 38 3
42 41 3
44 39 3
46 45 42
48 39 19
50 16 2
52 48 3
54 53 51
56 25 16
58 22 17
60 59 57
62 61 39
64 22 2
66 62 3
68 67 65
70 22 16
72 70 31
74 71 28
76 75 73
78 77 39
80 28 2
82 78 3
84 83 81
86 55 47
88 46 16
90 89 87
92 69 47
94 46 22
96 95 93
98 85 47
100 46 28
102 101 99
i0 stay
i1 controllable_reset
l0 n7
l1 counter<0>_out
l2 counter<1>_out
l3 counter<2>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:43 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv cnt3m.v   ---gives--> cnt3m.mv
> abc -c "read_blif_mv cnt3m.mv; write_aiger -s cnt3m.aig"   ---gives--> cnt3m.aig
> aigtoaig cnt3m.aig cnt3m.aag   ---gives--> cnt3m.aag (this file)
Content of cnt3m.v:
// realizable
module bench(clk, stay, controllable_reset, err);
  input clk;
  input stay;
  input controllable_reset;
  output err;
  reg [2:0] counter;

  assign err = (counter == 3'b111) ? 1 : 0;
  
  initial
  begin
    counter = 3'b0;
  end
  always @ (posedge clk)
  begin
    if(stay)
      counter = counter;
    else if(counter == 3'b011 && controllable_reset)
      counter = 0;
    else
      counter = counter + 1;
   end
endmodule
-------------------------------
