aag 35 2 3 1 30
2
4
6 1
8 65
10 71
24
12 9 6
14 8 6
16 13 6
18 11 6
20 10 6
22 19 6
24 22 16
26 21 16
28 26 4
30 28 3
32 31 3
34 29 3
36 35 32
38 29 17
40 14 2
42 38 3
44 43 41
46 23 14
48 20 15
50 49 47
52 51 29
54 20 2
56 52 3
58 57 55
60 45 37
62 36 14
64 63 61
66 59 37
68 36 20
70 69 67
i0 stay
i1 controllable_reset
l0 n7
l1 counter<0>_out
l2 counter<1>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:35 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv cnt2m.v   ---gives--> cnt2m.mv
> abc -c "read_blif_mv cnt2m.mv; write_aiger -s cnt2m.aig"   ---gives--> cnt2m.aig
> aigtoaig cnt2m.aig cnt2m.aag   ---gives--> cnt2m.aag (this file)
Content of cnt2m.v:
// realizable
module bench(clk, stay, controllable_reset, err);
  input clk;
  input stay;
  input controllable_reset;
  output err;
  reg [1:0] counter;

  assign err = (counter == 2'b11) ? 1 : 0;
  
  initial
  begin
    counter = 2'b0;
  end
  always @ (posedge clk)
  begin
    if(stay)
      counter = counter;
    else if(counter == 2'b01 && controllable_reset)
      counter = 0;
    else
      counter = counter + 1;
   end
endmodule
-------------------------------
