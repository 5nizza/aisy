aag 416 30 17 1 369
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62 1
64 321
66 349
68 385
70 421
72 457
74 493
76 529
78 565
80 601
82 637
84 673
86 709
88 745
90 781
92 817
94 832
220
96 65 62
98 64 62
100 97 62
102 67 62
104 66 62
106 103 62
108 69 62
110 68 62
112 109 62
114 71 62
116 70 62
118 115 62
120 73 62
122 72 62
124 121 62
126 75 62
128 74 62
130 127 62
132 77 62
134 76 62
136 133 62
138 79 62
140 78 62
142 139 62
144 81 62
146 80 62
148 145 62
150 83 62
152 82 62
154 151 62
156 85 62
158 84 62
160 157 62
162 87 62
164 86 62
166 163 62
168 89 62
170 88 62
172 169 62
174 91 62
176 90 62
178 175 62
180 93 62
182 92 62
184 181 62
186 95 62
188 94 62
190 187 62
192 106 100
194 192 112
196 194 118
198 196 124
200 198 130
202 200 136
204 202 142
206 204 148
208 206 154
210 208 160
212 210 166
214 212 172
216 214 178
218 216 184
220 218 190
222 4 3
224 5 2
226 225 223
228 226 6
230 227 7
232 231 229
234 232 8
236 233 9
238 237 235
240 238 10
242 239 11
244 243 241
246 244 12
248 245 13
250 249 247
252 250 14
254 251 15
256 255 253
258 256 16
260 257 17
262 261 259
264 262 18
266 263 19
268 267 265
270 268 20
272 269 21
274 273 271
276 274 22
278 275 23
280 279 277
282 280 24
284 281 25
286 285 283
288 286 26
290 287 27
292 291 289
294 292 28
296 293 29
298 297 295
300 298 30
302 299 31
304 303 301
306 305 188
308 101 32
310 98 33
312 311 309
314 98 32
316 306 98
318 313 307
320 319 317
322 107 35
324 322 314
326 107 34
328 326 315
330 329 325
332 104 35
334 332 315
336 335 330
338 104 34
340 338 314
342 341 336
344 306 104
346 343 307
348 347 345
350 314 34
352 314 104
354 353 351
356 354 339
358 113 37
360 358 357
362 113 36
364 362 356
366 365 361
368 110 37
370 368 356
372 371 366
374 110 36
376 374 357
378 377 372
380 306 110
382 379 307
384 383 381
386 357 36
388 357 110
390 389 387
392 390 375
394 119 39
396 394 393
398 119 38
400 398 392
402 401 397
404 116 39
406 404 392
408 407 402
410 116 38
412 410 393
414 413 408
416 306 116
418 415 307
420 419 417
422 393 38
424 393 116
426 425 423
428 426 411
430 125 41
432 430 429
434 125 40
436 434 428
438 437 433
440 122 41
442 440 428
444 443 438
446 122 40
448 446 429
450 449 444
452 306 122
454 451 307
456 455 453
458 429 40
460 429 122
462 461 459
464 462 447
466 131 43
468 466 465
470 131 42
472 470 464
474 473 469
476 128 43
478 476 464
480 479 474
482 128 42
484 482 465
486 485 480
488 306 128
490 487 307
492 491 489
494 465 42
496 465 128
498 497 495
500 498 483
502 137 45
504 502 501
506 137 44
508 506 500
510 509 505
512 134 45
514 512 500
516 515 510
518 134 44
520 518 501
522 521 516
524 306 134
526 523 307
528 527 525
530 501 44
532 501 134
534 533 531
536 534 519
538 143 47
540 538 537
542 143 46
544 542 536
546 545 541
548 140 47
550 548 536
552 551 546
554 140 46
556 554 537
558 557 552
560 306 140
562 559 307
564 563 561
566 537 46
568 537 140
570 569 567
572 570 555
574 149 49
576 574 573
578 149 48
580 578 572
582 581 577
584 146 49
586 584 572
588 587 582
590 146 48
592 590 573
594 593 588
596 306 146
598 595 307
600 599 597
602 573 48
604 573 146
606 605 603
608 606 591
610 155 51
612 610 609
614 155 50
616 614 608
618 617 613
620 152 51
622 620 608
624 623 618
626 152 50
628 626 609
630 629 624
632 306 152
634 631 307
636 635 633
638 609 50
640 609 152
642 641 639
644 642 627
646 161 53
648 646 645
650 161 52
652 650 644
654 653 649
656 158 53
658 656 644
660 659 654
662 158 52
664 662 645
666 665 660
668 306 158
670 667 307
672 671 669
674 645 52
676 645 158
678 677 675
680 678 663
682 167 55
684 682 681
686 167 54
688 686 680
690 689 685
692 164 55
694 692 680
696 695 690
698 164 54
700 698 681
702 701 696
704 306 164
706 703 307
708 707 705
710 681 54
712 681 164
714 713 711
716 714 699
718 173 57
720 718 717
722 173 56
724 722 716
726 725 721
728 170 57
730 728 716
732 731 726
734 170 56
736 734 717
738 737 732
740 306 170
742 739 307
744 743 741
746 717 56
748 717 170
750 749 747
752 750 735
754 179 59
756 754 753
758 179 58
760 758 752
762 761 757
764 176 59
766 764 752
768 767 762
770 176 58
772 770 753
774 773 768
776 306 176
778 775 307
780 779 777
782 753 58
784 753 176
786 785 783
788 786 771
790 185 61
792 790 789
794 185 60
796 794 788
798 797 793
800 182 61
802 800 788
804 803 798
806 182 60
808 806 789
810 809 804
812 306 182
814 811 307
816 815 813
818 789 60
820 789 182
822 821 819
824 822 807
826 825 191
828 824 188
830 829 827
832 831 307
i0 controllable_c<0>
i1 controllable_c<1>
i2 controllable_c<2>
i3 controllable_c<3>
i4 controllable_c<4>
i5 controllable_c<5>
i6 controllable_c<6>
i7 controllable_c<7>
i8 controllable_c<8>
i9 controllable_c<9>
i10 controllable_c<10>
i11 controllable_c<11>
i12 controllable_c<12>
i13 controllable_c<13>
i14 controllable_c<14>
i15 a<0>
i16 a<1>
i17 a<2>
i18 a<3>
i19 a<4>
i20 a<5>
i21 a<6>
i22 a<7>
i23 a<8>
i24 a<9>
i25 a<10>
i26 a<11>
i27 a<12>
i28 a<13>
i29 a<14>
l0 n63
l1 counter<0>_out
l2 counter<1>_out
l3 counter<2>_out
l4 counter<3>_out
l5 counter<4>_out
l6 counter<5>_out
l7 counter<6>_out
l8 counter<7>_out
l9 counter<8>_out
l10 counter<9>_out
l11 counter<10>_out
l12 counter<11>_out
l13 counter<12>_out
l14 counter<13>_out
l15 counter<14>_out
l16 counter<15>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:42 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv mv16.v   ---gives--> mv16.mv
> abc -c "read_blif_mv mv16.mv; write_aiger -s mv16.aig"   ---gives--> mv16.aig
> aigtoaig mv16.aig mv16.aag   ---gives--> mv16.aag (this file)
Content of mv16.v:
// realizable
module bench(clk, a, controllable_c, err);
  input clk;
  input [14:0] a;
  input [14:0] controllable_c;
  reg [15:0] counter;
  output err;
  wire ctrl_xor;
  
  assign err = (counter == 16'b1111111111111111) ? 1 : 0;
  assign ctrl_xor = controllable_c[0] ^ 
                    controllable_c[1] ^
                    controllable_c[2] ^
                    controllable_c[3] ^
                    controllable_c[4] ^
                    controllable_c[5] ^
                    controllable_c[6] ^
                    controllable_c[7] ^
                    controllable_c[8] ^
                    controllable_c[9] ^
                    controllable_c[10] ^
                    controllable_c[11] ^
                    controllable_c[12] ^
                    controllable_c[13] ^
                    controllable_c[14];

  initial
  begin
    counter = 0;
  end

  always @ (posedge clk)
  begin
    if(counter[15] & ctrl_xor)
       counter[15] = 0;
    else
       counter = counter + {1'b0, a};
   end
endmodule
-------------------------------
