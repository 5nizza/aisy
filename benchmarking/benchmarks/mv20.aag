aag 528 38 21 1 469
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78 1
80 401
82 429
84 465
86 501
88 537
90 573
92 609
94 645
96 681
98 717
100 753
102 789
104 825
106 861
108 897
110 933
112 969
114 1005
116 1041
118 1056
276
120 81 78
122 80 78
124 121 78
126 83 78
128 82 78
130 127 78
132 85 78
134 84 78
136 133 78
138 87 78
140 86 78
142 139 78
144 89 78
146 88 78
148 145 78
150 91 78
152 90 78
154 151 78
156 93 78
158 92 78
160 157 78
162 95 78
164 94 78
166 163 78
168 97 78
170 96 78
172 169 78
174 99 78
176 98 78
178 175 78
180 101 78
182 100 78
184 181 78
186 103 78
188 102 78
190 187 78
192 105 78
194 104 78
196 193 78
198 107 78
200 106 78
202 199 78
204 109 78
206 108 78
208 205 78
210 111 78
212 110 78
214 211 78
216 113 78
218 112 78
220 217 78
222 115 78
224 114 78
226 223 78
228 117 78
230 116 78
232 229 78
234 119 78
236 118 78
238 235 78
240 130 124
242 240 136
244 242 142
246 244 148
248 246 154
250 248 160
252 250 166
254 252 172
256 254 178
258 256 184
260 258 190
262 260 196
264 262 202
266 264 208
268 266 214
270 268 220
272 270 226
274 272 232
276 274 238
278 4 3
280 5 2
282 281 279
284 282 6
286 283 7
288 287 285
290 288 8
292 289 9
294 293 291
296 294 10
298 295 11
300 299 297
302 300 12
304 301 13
306 305 303
308 306 14
310 307 15
312 311 309
314 312 16
316 313 17
318 317 315
320 318 18
322 319 19
324 323 321
326 324 20
328 325 21
330 329 327
332 330 22
334 331 23
336 335 333
338 336 24
340 337 25
342 341 339
344 342 26
346 343 27
348 347 345
350 348 28
352 349 29
354 353 351
356 354 30
358 355 31
360 359 357
362 360 32
364 361 33
366 365 363
368 366 34
370 367 35
372 371 369
374 372 36
376 373 37
378 377 375
380 378 38
382 379 39
384 383 381
386 385 236
388 125 40
390 122 41
392 391 389
394 122 40
396 386 122
398 393 387
400 399 397
402 131 43
404 402 394
406 131 42
408 406 395
410 409 405
412 128 43
414 412 395
416 415 410
418 128 42
420 418 394
422 421 416
424 386 128
426 423 387
428 427 425
430 394 42
432 394 128
434 433 431
436 434 419
438 137 45
440 438 437
442 137 44
444 442 436
446 445 441
448 134 45
450 448 436
452 451 446
454 134 44
456 454 437
458 457 452
460 386 134
462 459 387
464 463 461
466 437 44
468 437 134
470 469 467
472 470 455
474 143 47
476 474 473
478 143 46
480 478 472
482 481 477
484 140 47
486 484 472
488 487 482
490 140 46
492 490 473
494 493 488
496 386 140
498 495 387
500 499 497
502 473 46
504 473 140
506 505 503
508 506 491
510 149 49
512 510 509
514 149 48
516 514 508
518 517 513
520 146 49
522 520 508
524 523 518
526 146 48
528 526 509
530 529 524
532 386 146
534 531 387
536 535 533
538 509 48
540 509 146
542 541 539
544 542 527
546 155 51
548 546 545
550 155 50
552 550 544
554 553 549
556 152 51
558 556 544
560 559 554
562 152 50
564 562 545
566 565 560
568 386 152
570 567 387
572 571 569
574 545 50
576 545 152
578 577 575
580 578 563
582 161 53
584 582 581
586 161 52
588 586 580
590 589 585
592 158 53
594 592 580
596 595 590
598 158 52
600 598 581
602 601 596
604 386 158
606 603 387
608 607 605
610 581 52
612 581 158
614 613 611
616 614 599
618 167 55
620 618 617
622 167 54
624 622 616
626 625 621
628 164 55
630 628 616
632 631 626
634 164 54
636 634 617
638 637 632
640 386 164
642 639 387
644 643 641
646 617 54
648 617 164
650 649 647
652 650 635
654 173 57
656 654 653
658 173 56
660 658 652
662 661 657
664 170 57
666 664 652
668 667 662
670 170 56
672 670 653
674 673 668
676 386 170
678 675 387
680 679 677
682 653 56
684 653 170
686 685 683
688 686 671
690 179 59
692 690 689
694 179 58
696 694 688
698 697 693
700 176 59
702 700 688
704 703 698
706 176 58
708 706 689
710 709 704
712 386 176
714 711 387
716 715 713
718 689 58
720 689 176
722 721 719
724 722 707
726 185 61
728 726 725
730 185 60
732 730 724
734 733 729
736 182 61
738 736 724
740 739 734
742 182 60
744 742 725
746 745 740
748 386 182
750 747 387
752 751 749
754 725 60
756 725 182
758 757 755
760 758 743
762 191 63
764 762 761
766 191 62
768 766 760
770 769 765
772 188 63
774 772 760
776 775 770
778 188 62
780 778 761
782 781 776
784 386 188
786 783 387
788 787 785
790 761 62
792 761 188
794 793 791
796 794 779
798 197 65
800 798 797
802 197 64
804 802 796
806 805 801
808 194 65
810 808 796
812 811 806
814 194 64
816 814 797
818 817 812
820 386 194
822 819 387
824 823 821
826 797 64
828 797 194
830 829 827
832 830 815
834 203 67
836 834 833
838 203 66
840 838 832
842 841 837
844 200 67
846 844 832
848 847 842
850 200 66
852 850 833
854 853 848
856 386 200
858 855 387
860 859 857
862 833 66
864 833 200
866 865 863
868 866 851
870 209 69
872 870 869
874 209 68
876 874 868
878 877 873
880 206 69
882 880 868
884 883 878
886 206 68
888 886 869
890 889 884
892 386 206
894 891 387
896 895 893
898 869 68
900 869 206
902 901 899
904 902 887
906 215 71
908 906 905
910 215 70
912 910 904
914 913 909
916 212 71
918 916 904
920 919 914
922 212 70
924 922 905
926 925 920
928 386 212
930 927 387
932 931 929
934 905 70
936 905 212
938 937 935
940 938 923
942 221 73
944 942 941
946 221 72
948 946 940
950 949 945
952 218 73
954 952 940
956 955 950
958 218 72
960 958 941
962 961 956
964 386 218
966 963 387
968 967 965
970 941 72
972 941 218
974 973 971
976 974 959
978 227 75
980 978 977
982 227 74
984 982 976
986 985 981
988 224 75
990 988 976
992 991 986
994 224 74
996 994 977
998 997 992
1000 386 224
1002 999 387
1004 1003 1001
1006 977 74
1008 977 224
1010 1009 1007
1012 1010 995
1014 233 77
1016 1014 1013
1018 233 76
1020 1018 1012
1022 1021 1017
1024 230 77
1026 1024 1012
1028 1027 1022
1030 230 76
1032 1030 1013
1034 1033 1028
1036 386 230
1038 1035 387
1040 1039 1037
1042 1013 76
1044 1013 230
1046 1045 1043
1048 1046 1031
1050 1049 239
1052 1048 236
1054 1053 1051
1056 1055 387
i0 controllable_c<0>
i1 controllable_c<1>
i2 controllable_c<2>
i3 controllable_c<3>
i4 controllable_c<4>
i5 controllable_c<5>
i6 controllable_c<6>
i7 controllable_c<7>
i8 controllable_c<8>
i9 controllable_c<9>
i10 controllable_c<10>
i11 controllable_c<11>
i12 controllable_c<12>
i13 controllable_c<13>
i14 controllable_c<14>
i15 controllable_c<15>
i16 controllable_c<16>
i17 controllable_c<17>
i18 controllable_c<18>
i19 a<0>
i20 a<1>
i21 a<2>
i22 a<3>
i23 a<4>
i24 a<5>
i25 a<6>
i26 a<7>
i27 a<8>
i28 a<9>
i29 a<10>
i30 a<11>
i31 a<12>
i32 a<13>
i33 a<14>
i34 a<15>
i35 a<16>
i36 a<17>
i37 a<18>
l0 n79
l1 counter<0>_out
l2 counter<1>_out
l3 counter<2>_out
l4 counter<3>_out
l5 counter<4>_out
l6 counter<5>_out
l7 counter<6>_out
l8 counter<7>_out
l9 counter<8>_out
l10 counter<9>_out
l11 counter<10>_out
l12 counter<11>_out
l13 counter<12>_out
l14 counter<13>_out
l15 counter<14>_out
l16 counter<15>_out
l17 counter<16>_out
l18 counter<17>_out
l19 counter<18>_out
l20 counter<19>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:35 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv mv20.v   ---gives--> mv20.mv
> abc -c "read_blif_mv mv20.mv; write_aiger -s mv20.aig"   ---gives--> mv20.aig
> aigtoaig mv20.aig mv20.aag   ---gives--> mv20.aag (this file)
Content of mv20.v:
// realizable
module bench(clk, a, controllable_c, err);
  input clk;
  input [18:0] a;
  input [18:0] controllable_c;
  reg [19:0] counter;
  output err;
  wire ctrl_xor;
  
  assign err = (counter == 20'b11111111111111111111) ? 1 : 0;
  assign ctrl_xor = controllable_c[0] ^ 
                    controllable_c[1] ^
                    controllable_c[2] ^
                    controllable_c[3] ^
                    controllable_c[4] ^
                    controllable_c[5] ^
                    controllable_c[6] ^
                    controllable_c[7] ^
                    controllable_c[8] ^
                    controllable_c[9] ^
                    controllable_c[10] ^
                    controllable_c[11] ^
                    controllable_c[12] ^
                    controllable_c[13] ^
                    controllable_c[14] ^
                    controllable_c[15] ^
                    controllable_c[16] ^
                    controllable_c[17] ^
                    controllable_c[18];

  initial
  begin
    counter = 0;
  end

  always @ (posedge clk)
  begin
    if(counter[19] & ctrl_xor)
       counter[19] = 0;
    else
       counter = counter + {1'b0, a};
   end
endmodule
-------------------------------
