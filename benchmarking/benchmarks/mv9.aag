aag 220 16 10 1 194
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34 1
36 181
38 209
40 245
42 281
44 317
46 353
48 389
50 425
52 440
122
54 37 34
56 36 34
58 55 34
60 39 34
62 38 34
64 61 34
66 41 34
68 40 34
70 67 34
72 43 34
74 42 34
76 73 34
78 45 34
80 44 34
82 79 34
84 47 34
86 46 34
88 85 34
90 49 34
92 48 34
94 91 34
96 51 34
98 50 34
100 97 34
102 53 34
104 52 34
106 103 34
108 64 58
110 108 70
112 110 76
114 112 82
116 114 88
118 116 94
120 118 100
122 120 106
124 4 3
126 5 2
128 127 125
130 128 6
132 129 7
134 133 131
136 134 8
138 135 9
140 139 137
142 140 10
144 141 11
146 145 143
148 146 12
150 147 13
152 151 149
154 152 14
156 153 15
158 157 155
160 158 14
162 159 15
164 163 161
166 165 104
168 59 18
170 56 19
172 171 169
174 56 18
176 166 56
178 173 167
180 179 177
182 65 21
184 182 174
186 65 20
188 186 175
190 189 185
192 62 21
194 192 175
196 195 190
198 62 20
200 198 174
202 201 196
204 166 62
206 203 167
208 207 205
210 174 20
212 174 62
214 213 211
216 214 199
218 71 23
220 218 217
222 71 22
224 222 216
226 225 221
228 68 23
230 228 216
232 231 226
234 68 22
236 234 217
238 237 232
240 166 68
242 239 167
244 243 241
246 217 22
248 217 68
250 249 247
252 250 235
254 77 25
256 254 253
258 77 24
260 258 252
262 261 257
264 74 25
266 264 252
268 267 262
270 74 24
272 270 253
274 273 268
276 166 74
278 275 167
280 279 277
282 253 24
284 253 74
286 285 283
288 286 271
290 83 27
292 290 289
294 83 26
296 294 288
298 297 293
300 80 27
302 300 288
304 303 298
306 80 26
308 306 289
310 309 304
312 166 80
314 311 167
316 315 313
318 289 26
320 289 80
322 321 319
324 322 307
326 89 29
328 326 325
330 89 28
332 330 324
334 333 329
336 86 29
338 336 324
340 339 334
342 86 28
344 342 325
346 345 340
348 166 86
350 347 167
352 351 349
354 325 28
356 325 86
358 357 355
360 358 343
362 95 31
364 362 361
366 95 30
368 366 360
370 369 365
372 92 31
374 372 360
376 375 370
378 92 30
380 378 361
382 381 376
384 166 92
386 383 167
388 387 385
390 361 30
392 361 92
394 393 391
396 394 379
398 101 33
400 398 397
402 101 32
404 402 396
406 405 401
408 98 33
410 408 396
412 411 406
414 98 32
416 414 397
418 417 412
420 166 98
422 419 167
424 423 421
426 397 32
428 397 98
430 429 427
432 430 415
434 433 107
436 432 104
438 437 435
440 439 167
i0 controllable_c<0>
i1 controllable_c<1>
i2 controllable_c<2>
i3 controllable_c<3>
i4 controllable_c<4>
i5 controllable_c<5>
i6 controllable_c<6>
i7 controllable_c<7>
i8 a<0>
i9 a<1>
i10 a<2>
i11 a<3>
i12 a<4>
i13 a<5>
i14 a<6>
i15 a<7>
l0 n35
l1 counter<0>_out
l2 counter<1>_out
l3 counter<2>_out
l4 counter<3>_out
l5 counter<4>_out
l6 counter<5>_out
l7 counter<6>_out
l8 counter<7>_out
l9 counter<8>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:44 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv mv9.v   ---gives--> mv9.mv
> abc -c "read_blif_mv mv9.mv; write_aiger -s mv9.aig"   ---gives--> mv9.aig
> aigtoaig mv9.aig mv9.aag   ---gives--> mv9.aag (this file)
Content of mv9.v:
// realizable
module bench(clk, a, controllable_c, err);
  input clk;
  input [7:0] a;
  input [7:0] controllable_c;
  reg [8:0] counter;
  output err;
  wire ctrl_xor;
  
  assign err = (counter == 9'b111111111) ? 1 : 0;
  assign ctrl_xor = controllable_c[0] ^ 
                    controllable_c[1] ^
                    controllable_c[2] ^
                    controllable_c[3] ^
                    controllable_c[4] ^
                    controllable_c[5] ^
                    controllable_c[6] ^
                    controllable_c[6];

  initial
  begin
    counter = 0;
  end

  always @ (posedge clk)
  begin
    if(counter[8] & ctrl_xor)
       counter[8] = 0;
    else
       counter = counter + {1'b0, a};
   end
endmodule
-------------------------------
