aag 221 22 13 1 186
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46 1
48 377
50 383
52 389
54 395
56 401
58 407
60 413
62 419
64 425
66 431
68 437
70 443
164
72 49 46
74 48 46
76 73 46
78 51 46
80 50 46
82 79 46
84 53 46
86 52 46
88 85 46
90 55 46
92 54 46
94 91 46
96 57 46
98 56 46
100 97 46
102 59 46
104 58 46
106 103 46
108 61 46
110 60 46
112 109 46
114 63 46
116 62 46
118 115 46
120 65 46
122 64 46
124 121 46
126 67 46
128 66 46
130 127 46
132 69 46
134 68 46
136 133 46
138 71 46
140 70 46
142 139 46
144 82 76
146 144 88
148 146 94
150 148 100
152 150 106
154 152 112
156 154 118
158 156 124
160 158 130
162 160 136
164 162 142
166 4 3
168 5 2
170 169 167
172 170 6
174 171 7
176 175 173
178 176 8
180 177 9
182 181 179
184 182 10
186 183 11
188 187 185
190 188 12
192 189 13
194 193 191
196 194 14
198 195 15
200 199 197
202 200 16
204 201 17
206 205 203
208 206 18
210 207 19
212 211 209
214 212 20
216 213 21
218 217 215
220 218 22
222 219 23
224 223 221
226 225 140
228 227 136
230 229 227
232 230 229
234 227 137
236 235 232
238 136 74
240 137 24
242 241 239
244 226 74
246 243 227
248 247 245
250 136 80
252 137 26
254 253 251
256 226 80
258 255 227
260 259 257
262 136 86
264 137 28
266 265 263
268 226 86
270 267 227
272 271 269
274 136 92
276 137 30
278 277 275
280 226 92
282 279 227
284 283 281
286 136 98
288 137 32
290 289 287
292 226 98
294 291 227
296 295 293
298 136 104
300 137 34
302 301 299
304 226 104
306 303 227
308 307 305
310 136 110
312 137 36
314 313 311
316 226 110
318 315 227
320 319 317
322 136 116
324 137 38
326 325 323
328 226 116
330 327 227
332 331 329
334 136 122
336 137 40
338 337 335
340 226 122
342 339 227
344 343 341
346 136 128
348 137 42
350 349 347
352 226 128
354 351 227
356 355 353
358 137 44
360 226 134
362 358 227
364 363 361
366 140 137
368 367 137
370 369 227
372 249 237
374 236 74
376 375 373
378 261 237
380 236 80
382 381 379
384 273 237
386 236 86
388 387 385
390 285 237
392 236 92
394 393 391
396 297 237
398 236 98
400 399 397
402 309 237
404 236 104
406 405 403
408 321 237
410 236 110
412 411 409
414 333 237
416 236 116
418 417 415
420 345 237
422 236 122
424 423 421
426 357 237
428 236 128
430 429 427
432 365 237
434 236 134
436 435 433
438 370 237
440 236 140
442 441 439
i0 controllable_c<0>
i1 controllable_c<1>
i2 controllable_c<2>
i3 controllable_c<3>
i4 controllable_c<4>
i5 controllable_c<5>
i6 controllable_c<6>
i7 controllable_c<7>
i8 controllable_c<8>
i9 controllable_c<9>
i10 controllable_c<10>
i11 a<0>
i12 a<1>
i13 a<2>
i14 a<3>
i15 a<4>
i16 a<5>
i17 a<6>
i18 a<7>
i19 a<8>
i20 a<9>
i21 a<10>
l0 n47
l1 counter<0>_out
l2 counter<1>_out
l3 counter<2>_out
l4 counter<3>_out
l5 counter<4>_out
l6 counter<5>_out
l7 counter<6>_out
l8 counter<7>_out
l9 counter<8>_out
l10 counter<9>_out
l11 counter<10>_out
l12 counter<11>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:38 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv mv12s.v   ---gives--> mv12s.mv
> abc -c "read_blif_mv mv12s.mv; write_aiger -s mv12s.aig"   ---gives--> mv12s.aig
> aigtoaig mv12s.aig mv12s.aag   ---gives--> mv12s.aag (this file)
Content of mv12s.v:
// realizable
module bench(clk, a, controllable_c, err);
  input clk;
  input [10:0] a;
  input [10:0] controllable_c;
  reg [11:0] counter;
  output err;
  wire ctrl_xor;
  
  assign err = (counter == 12'b111111111111) ? 1 : 0;
  assign ctrl_xor = controllable_c[0] ^
                    controllable_c[1] ^
                    controllable_c[2] ^
                    controllable_c[3] ^
                    controllable_c[4] ^
                    controllable_c[5] ^
                    controllable_c[6] ^
                    controllable_c[7] ^
                    controllable_c[8] ^
                    controllable_c[9] ^
                    controllable_c[10];

  initial
  begin
    counter = 0;
  end

  always @ (posedge clk)
  begin
    if(counter[11] & ctrl_xor)
       counter[11] = 0;
    else if(counter[10])
      begin
       counter[11] = 1;
       counter[10] = 0;
      end
    else
       counter[10:0] = a;
   end
endmodule
-------------------------------
