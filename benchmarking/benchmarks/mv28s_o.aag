aag 301 54 29 1 218
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
102
104
106
108
110 1
112 442
114 448
116 454
118 460
120 466
122 472
124 478
126 484
128 490
130 496
132 502
134 508
136 514
138 520
140 526
142 532
144 538
146 544
148 550
150 556
152 562
154 568
156 574
158 580
160 586
162 593
164 599
166 602
276
168 166 110
170 162 110
172 164 110
174 172 170
176 160 110
178 156 110
180 158 110
182 180 178
184 182 176
186 184 174
188 112 110
190 114 110
192 190 188
194 116 110
196 194 192
198 118 110
200 198 196
202 120 110
204 202 200
206 122 110
208 206 204
210 124 110
212 210 208
214 126 110
216 214 212
218 128 110
220 218 216
222 130 110
224 222 220
226 132 110
228 226 224
230 134 110
232 230 228
234 136 110
236 234 232
238 138 110
240 238 236
242 140 110
244 242 240
246 142 110
248 246 244
250 144 110
252 250 248
254 146 110
256 254 252
258 148 110
260 258 256
262 150 110
264 262 260
266 152 110
268 154 110
270 268 266
272 270 264
274 272 186
276 274 168
278 4 3
280 5 2
282 281 279
284 282 6
286 283 7
288 287 285
290 288 8
292 289 9
294 293 291
296 294 10
298 295 11
300 299 297
302 300 12
304 301 13
306 305 303
308 306 14
310 307 15
312 311 309
314 312 16
316 313 17
318 317 315
320 318 18
322 319 19
324 323 321
326 324 20
328 325 21
330 329 327
332 330 22
334 331 23
336 335 333
338 336 24
340 337 25
342 341 339
344 342 26
346 343 27
348 347 345
350 348 28
352 349 29
354 353 351
356 354 30
358 355 31
360 359 357
362 360 32
364 361 33
366 365 363
368 366 34
370 367 35
372 371 369
374 372 36
376 373 37
378 377 375
380 378 38
382 379 39
384 383 381
386 384 40
388 385 41
390 389 387
392 390 42
394 391 43
396 395 393
398 396 44
400 397 45
402 401 399
404 402 46
406 403 47
408 407 405
410 408 48
412 409 49
414 413 411
416 414 50
418 415 51
420 419 417
422 420 52
424 421 53
426 425 423
428 426 54
430 427 55
432 431 429
434 433 168
436 435 173
438 437 189
440 436 57
442 441 439
444 437 191
446 436 59
448 447 445
450 437 195
452 436 61
454 453 451
456 437 199
458 436 63
460 459 457
462 437 203
464 436 65
466 465 463
468 437 207
470 436 67
472 471 469
474 437 211
476 436 69
478 477 475
480 437 215
482 436 71
484 483 481
486 437 219
488 436 73
490 489 487
492 437 223
494 436 75
496 495 493
498 437 227
500 436 77
502 501 499
504 437 231
506 436 79
508 507 505
510 437 235
512 436 81
514 513 511
516 437 239
518 436 83
520 519 517
522 437 243
524 436 85
526 525 523
528 437 247
530 436 87
532 531 529
534 437 251
536 436 89
538 537 535
540 437 255
542 436 91
544 543 541
546 437 259
548 436 93
550 549 547
552 437 263
554 436 95
556 555 553
558 437 267
560 436 97
562 561 559
564 437 269
566 436 99
568 567 565
570 437 179
572 436 101
574 573 571
576 437 181
578 436 103
580 579 577
582 437 177
584 436 105
586 585 583
588 437 170
590 436 106
592 591 589
594 434 172
596 436 108
598 597 595
600 173 169
602 601 435
i0 controllable_c<0>
i1 controllable_c<1>
i2 controllable_c<2>
i3 controllable_c<3>
i4 controllable_c<4>
i5 controllable_c<5>
i6 controllable_c<6>
i7 controllable_c<7>
i8 controllable_c<8>
i9 controllable_c<9>
i10 controllable_c<10>
i11 controllable_c<11>
i12 controllable_c<12>
i13 controllable_c<13>
i14 controllable_c<14>
i15 controllable_c<15>
i16 controllable_c<16>
i17 controllable_c<17>
i18 controllable_c<18>
i19 controllable_c<19>
i20 controllable_c<20>
i21 controllable_c<21>
i22 controllable_c<22>
i23 controllable_c<23>
i24 controllable_c<24>
i25 controllable_c<25>
i26 controllable_c<26>
i27 a<0>
i28 a<1>
i29 a<2>
i30 a<3>
i31 a<4>
i32 a<5>
i33 a<6>
i34 a<7>
i35 a<8>
i36 a<9>
i37 a<10>
i38 a<11>
i39 a<12>
i40 a<13>
i41 a<14>
i42 a<15>
i43 a<16>
i44 a<17>
i45 a<18>
i46 a<19>
i47 a<20>
i48 a<21>
i49 a<22>
i50 a<23>
i51 a<24>
i52 a<25>
i53 a<26>
l0 n111
l1 counter<0>_out
l2 counter<1>_out
l3 counter<2>_out
l4 counter<3>_out
l5 counter<4>_out
l6 counter<5>_out
l7 counter<6>_out
l8 counter<7>_out
l9 counter<8>_out
l10 counter<9>_out
l11 counter<10>_out
l12 counter<11>_out
l13 counter<12>_out
l14 counter<13>_out
l15 counter<14>_out
l16 counter<15>_out
l17 counter<16>_out
l18 counter<17>_out
l19 counter<18>_out
l20 counter<19>_out
l21 counter<20>_out
l22 counter<21>_out
l23 counter<22>_out
l24 counter<23>_out
l25 counter<24>_out
l26 counter<25>_out
l27 counter<26>_out
l28 counter<27>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:43 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv mv28s.v   ---gives--> mv28s.mv
> abc -c "read_blif_mv mv28s.mv; strash; refactor; rewrite; dfraig; rewrite; dfraig; write_aiger -s mv28s_o.aig"   ---gives--> mv28s_o.aig
> aigtoaig mv28s_o.aig mv28s_o.aag   ---gives--> mv28s_o.aag (this file)
Content of mv28s.v:
// realizable
module bench(clk, a, controllable_c, err);
  input clk;
  input [26:0] a;
  input [26:0] controllable_c;
  reg [27:0] counter;
  output err;
  wire ctrl_xor;
  
  assign err = (counter == 28'b1111111111111111111111111111) ? 1 : 0;
  assign ctrl_xor = controllable_c[0] ^
                    controllable_c[1] ^
                    controllable_c[2] ^
                    controllable_c[3] ^
                    controllable_c[4] ^
                    controllable_c[5] ^
                    controllable_c[6] ^
                    controllable_c[7] ^
                    controllable_c[8] ^
                    controllable_c[9] ^
                    controllable_c[10] ^
                    controllable_c[11] ^
                    controllable_c[12] ^
                    controllable_c[13] ^
                    controllable_c[14] ^
                    controllable_c[15] ^
                    controllable_c[16] ^
                    controllable_c[17] ^
                    controllable_c[18] ^
                    controllable_c[19] ^
                    controllable_c[20] ^
                    controllable_c[21] ^
                    controllable_c[22] ^
                    controllable_c[23] ^
                    controllable_c[24] ^
                    controllable_c[25] ^
                    controllable_c[26];
                    

  initial
  begin
    counter = 0;
  end

  always @ (posedge clk)
  begin
    if(counter[27] & ctrl_xor)
       counter[27] = 0;
    else if(counter[26])
      begin
       counter[27] = 1;
       counter[26] = 0;
      end
    else
       counter[26:0] = a;
   end
endmodule
-------------------------------
