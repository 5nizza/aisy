aag 145 14 9 1 122
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30 1
32 249
34 255
36 261
38 267
40 273
42 279
44 285
46 291
108
48 33 30
50 32 30
52 49 30
54 35 30
56 34 30
58 55 30
60 37 30
62 36 30
64 61 30
66 39 30
68 38 30
70 67 30
72 41 30
74 40 30
76 73 30
78 43 30
80 42 30
82 79 30
84 45 30
86 44 30
88 85 30
90 47 30
92 46 30
94 91 30
96 58 52
98 96 64
100 98 70
102 100 76
104 102 82
106 104 88
108 106 94
110 4 3
112 5 2
114 113 111
116 114 6
118 115 7
120 119 117
122 120 8
124 121 9
126 125 123
128 126 10
130 127 11
132 131 129
134 132 12
136 133 13
138 137 135
140 138 14
142 139 15
144 143 141
146 145 92
148 147 88
150 149 147
152 150 149
154 147 89
156 155 152
158 88 50
160 89 16
162 161 159
164 146 50
166 163 147
168 167 165
170 88 56
172 89 18
174 173 171
176 146 56
178 175 147
180 179 177
182 88 62
184 89 20
186 185 183
188 146 62
190 187 147
192 191 189
194 88 68
196 89 22
198 197 195
200 146 68
202 199 147
204 203 201
206 88 74
208 89 24
210 209 207
212 146 74
214 211 147
216 215 213
218 88 80
220 89 26
222 221 219
224 146 80
226 223 147
228 227 225
230 89 28
232 146 86
234 230 147
236 235 233
238 92 89
240 239 89
242 241 147
244 169 157
246 156 50
248 247 245
250 181 157
252 156 56
254 253 251
256 193 157
258 156 62
260 259 257
262 205 157
264 156 68
266 265 263
268 217 157
270 156 74
272 271 269
274 229 157
276 156 80
278 277 275
280 237 157
282 156 86
284 283 281
286 242 157
288 156 92
290 289 287
i0 controllable_c<0>
i1 controllable_c<1>
i2 controllable_c<2>
i3 controllable_c<3>
i4 controllable_c<4>
i5 controllable_c<5>
i6 controllable_c<6>
i7 a<0>
i8 a<1>
i9 a<2>
i10 a<3>
i11 a<4>
i12 a<5>
i13 a<6>
l0 n31
l1 counter<0>_out
l2 counter<1>_out
l3 counter<2>_out
l4 counter<3>_out
l5 counter<4>_out
l6 counter<5>_out
l7 counter<6>_out
l8 counter<7>_out
o0 err
c
bench
This file was written by ABC on Thu May 23 15:48:32 2013
For information about AIGER format, refer to http://fmv.jku.at/aiger
-------------------------------
This AIGER file has been created by the following sequence of commands:
> vl2mv mv8s.v   ---gives--> mv8s.mv
> abc -c "read_blif_mv mv8s.mv; write_aiger -s mv8s.aig"   ---gives--> mv8s.aig
> aigtoaig mv8s.aig mv8s.aag   ---gives--> mv8s.aag (this file)
Content of mv8s.v:
// realizable
module bench(clk, a, controllable_c, err);
  input clk;
  input [6:0] a;
  input [6:0] controllable_c;
  reg [7:0] counter;
  output err;
  wire ctrl_xor;
  
  assign err = (counter == 8'b11111111) ? 1 : 0;
  assign ctrl_xor = controllable_c[0] ^
                    controllable_c[1] ^
                    controllable_c[2] ^
                    controllable_c[3] ^
                    controllable_c[4] ^
                    controllable_c[5] ^
                    controllable_c[6];

  initial
  begin
    counter = 0;
  end

  always @ (posedge clk)
  begin
    if(counter[7] & ctrl_xor)
       counter[7] = 0;
    else if(counter[6])
      begin
       counter[7] = 1;
       counter[6] = 0;
      end
    else
       counter[6:0] = a;
   end
endmodule
-------------------------------
